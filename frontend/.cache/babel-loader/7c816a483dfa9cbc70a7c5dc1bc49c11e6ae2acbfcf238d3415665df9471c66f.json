{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STSC\\\\Downloads\\\\Agent-Backend-main (3)\\\\my-app\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getChatHistory, sendChatMessage } from '../services/api';\nimport '../styles/Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Check authentication first\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      console.log(\"Found authentication token\");\n    } else {\n      console.warn(\"No authentication token found\");\n    }\n    setLoading(false);\n  }, []);\n\n  // Fetch messages when component mounts\n  useEffect(() => {\n    // We'll fetch messages regardless of authentication for testing\n    // if (!isAuthenticated) return;\n\n    const fetchMessages = async () => {\n      try {\n        const data = await getChatHistory();\n        setMessages(data);\n      } catch (error) {\n        console.error(\"Failed to fetch messages:\", error);\n        setError(\"Failed to load chat history. Please refresh the page.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMessages();\n  }, []);\n\n  // Scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || sendingMessage) return;\n\n    // Clear any previous errors\n    setError(null);\n    try {\n      setSendingMessage(true);\n\n      // Add user message to state\n      const userMessage = {\n        id: `user-${Date.now()}`,\n        content: newMessage,\n        sender: 'user',\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setNewMessage('');\n\n      // Add a temporary \"thinking\" message\n      const thinkingId = `thinking-${Date.now()}`;\n      setMessages(prevMessages => [...prevMessages, {\n        id: thinkingId,\n        content: \"Thinking...\",\n        sender: 'system',\n        timestamp: new Date().toISOString(),\n        isThinking: true\n      }]);\n\n      // Send to backend and get response\n      const botResponse = await sendChatMessage(newMessage);\n\n      // Remove thinking message and add actual response\n      setMessages(prevMessages => {\n        const filteredMessages = prevMessages.filter(msg => msg.id !== thinkingId);\n        return [...filteredMessages, {\n          id: `bot-${Date.now()}`,\n          ...botResponse\n        }];\n      });\n    } catch (error) {\n      console.error(\"Failed to send message:\", error);\n\n      // Remove thinking message if it exists\n      setMessages(prevMessages => {\n        const filteredMessages = prevMessages.filter(msg => !msg.isThinking);\n        return [...filteredMessages, {\n          id: `error-${Date.now()}`,\n          content: \"Sorry, there was an error processing your request. Please try again.\",\n          sender: 'system',\n          timestamp: new Date().toISOString()\n        }];\n      });\n\n      // Display authentication error if that's the issue\n      if (error.message && error.message.includes(\"401\")) {\n        setError(\"Authentication failed. Please log in again.\");\n      } else {\n        setError(\"Failed to send message. Please try again.\");\n      }\n    } finally {\n      setSendingMessage(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading chat...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this);\n  }\n\n  // For testing, we'll show the chat even without authentication\n  // if (!isAuthenticated) {\n  //   return <Navigate to=\"/login\" />;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center items-center bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"w-full max-w-4xl text-center mb-12 p-6 bg-green-50 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-green-600 mb-4\",\n          children: \"Welcome to FarmSphere.AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-700\",\n          children: \"FarmSphere.AI is your trusted farming assistant, providing solutions tailored for modern agriculture. Ask us anything, and we'll help you make informed decisions for your farm.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `inline-block px-2 py-1 rounded ${isAuthenticated ? 'bg-green-200' : 'bg-red-200'}`,\n            children: isAuthenticated ? 'Authenticated' : 'Not Authenticated'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-red-100 border border-red-300 text-red-700 rounded\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"w-full max-w-4xl bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-semibold text-green-600 mb-4\",\n          children: \"Ask Your Farming Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages mb-4 max-h-96 overflow-y-auto p-4 bg-gray-50 rounded-lg\",\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-gray-500 py-4\",\n            children: \"No messages yet. Start by asking a question about farming or plant varieties.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender}-message my-2 p-3 rounded-lg ${msg.sender === 'user' ? 'bg-green-100 ml-auto' : msg.sender === 'bot' ? 'bg-white border border-green-200' : msg.isThinking ? 'bg-yellow-50 border border-yellow-200 text-yellow-700' : 'bg-red-100'} max-w-3/4`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-xs text-gray-500 mt-1 block\",\n              children: new Date(msg.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"query-form\",\n          className: \"space-y-4\",\n          onSubmit: handleSendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"message\",\n            name: \"message\",\n            className: \"w-full p-4 border-2 border-gray-300 rounded-lg shadow-sm text-lg\",\n            placeholder: \"Type your farming question here...\",\n            required: true,\n            rows: \"3\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            disabled: sendingMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"askAI\",\n            className: `w-full py-3 rounded-lg text-lg font-semibold transition ${sendingMessage ? 'bg-gray-400 cursor-not-allowed' : 'bg-green-600 text-white hover:bg-green-700'}`,\n            disabled: sendingMessage,\n            children: sendingMessage ? 'Sending...' : 'Ask'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"uiVBFob10wHkZsTdUg59aEpYl88=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navigate","getChatHistory","sendChatMessage","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","isAuthenticated","setIsAuthenticated","sendingMessage","setSendingMessage","error","setError","messagesEndRef","token","localStorage","getItem","console","log","warn","fetchMessages","data","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","userMessage","id","Date","now","content","sender","timestamp","toISOString","prevMessages","thinkingId","isThinking","botResponse","filteredMessages","filter","msg","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","toLocaleTimeString","ref","onSubmit","name","placeholder","required","rows","value","onChange","target","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getChatHistory, sendChatMessage } from '../services/api';\nimport '../styles/Chat.css';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  \n  // Check authentication first\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      console.log(\"Found authentication token\");\n    } else {\n      console.warn(\"No authentication token found\");\n    }\n    setLoading(false);\n  }, []);\n\n  // Fetch messages when component mounts\n  useEffect(() => {\n    // We'll fetch messages regardless of authentication for testing\n    // if (!isAuthenticated) return;\n\n    const fetchMessages = async () => {\n      try {\n        const data = await getChatHistory();\n        setMessages(data);\n      } catch (error) {\n        console.error(\"Failed to fetch messages:\", error);\n        setError(\"Failed to load chat history. Please refresh the page.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchMessages();\n  }, []);\n  \n  // Scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || sendingMessage) return;\n    \n    // Clear any previous errors\n    setError(null);\n    \n    try {\n      setSendingMessage(true);\n      \n      // Add user message to state\n      const userMessage = {\n        id: `user-${Date.now()}`,\n        content: newMessage,\n        sender: 'user',\n        timestamp: new Date().toISOString()\n      };\n      \n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setNewMessage('');\n      \n      // Add a temporary \"thinking\" message\n      const thinkingId = `thinking-${Date.now()}`;\n      setMessages(prevMessages => [\n        ...prevMessages, \n        {\n          id: thinkingId,\n          content: \"Thinking...\",\n          sender: 'system',\n          timestamp: new Date().toISOString(),\n          isThinking: true\n        }\n      ]);\n      \n      // Send to backend and get response\n      const botResponse = await sendChatMessage(newMessage);\n      \n      // Remove thinking message and add actual response\n      setMessages(prevMessages => {\n        const filteredMessages = prevMessages.filter(msg => msg.id !== thinkingId);\n        return [\n          ...filteredMessages,\n          {\n            id: `bot-${Date.now()}`,\n            ...botResponse\n          }\n        ];\n      });\n    } catch (error) {\n      console.error(\"Failed to send message:\", error);\n      \n      // Remove thinking message if it exists\n      setMessages(prevMessages => {\n        const filteredMessages = prevMessages.filter(msg => !msg.isThinking);\n        return [\n          ...filteredMessages,\n          {\n            id: `error-${Date.now()}`,\n            content: \"Sorry, there was an error processing your request. Please try again.\",\n            sender: 'system',\n            timestamp: new Date().toISOString()\n          }\n        ];\n      });\n      \n      // Display authentication error if that's the issue\n      if (error.message && error.message.includes(\"401\")) {\n        setError(\"Authentication failed. Please log in again.\");\n      } else {\n        setError(\"Failed to send message. Please try again.\");\n      }\n    } finally {\n      setSendingMessage(false);\n    }\n  };\n  \n  if (loading) {\n    return <div className=\"loading-spinner\">Loading chat...</div>;\n  }\n\n  // For testing, we'll show the chat even without authentication\n  // if (!isAuthenticated) {\n  //   return <Navigate to=\"/login\" />;\n  // }\n  \n  return (\n    <div className=\"chat-container\">\n      <div className=\"flex flex-col justify-center items-center bg-gray-100\">\n        {/* Introduction Section */}\n        <section className=\"w-full max-w-4xl text-center mb-12 p-6 bg-green-50 rounded-lg shadow-md\">\n          <h2 className=\"text-3xl font-bold text-green-600 mb-4\">Welcome to FarmSphere.AI</h2>\n          <p className=\"text-lg text-gray-700\">\n            FarmSphere.AI is your trusted farming assistant, providing solutions tailored for modern agriculture. Ask us anything, and we'll help you make informed decisions for your farm.\n          </p>\n          \n          {/* Auth status indicator for debugging */}\n          <div className=\"mt-2 text-sm\">\n            <span className={`inline-block px-2 py-1 rounded ${isAuthenticated ? 'bg-green-200' : 'bg-red-200'}`}>\n              {isAuthenticated ? 'Authenticated' : 'Not Authenticated'}\n            </span>\n          </div>\n          \n          {/* Error message display */}\n          {error && (\n            <div className=\"mt-4 p-3 bg-red-100 border border-red-300 text-red-700 rounded\">\n              {error}\n            </div>\n          )}\n        </section>\n\n        {/* Chatbox Section */}\n        <section className=\"w-full max-w-4xl bg-white p-6 rounded-lg shadow-md\">\n          <h3 className=\"text-2xl font-semibold text-green-600 mb-4\">Ask Your Farming Questions</h3>\n          \n          {/* Chat messages */}\n          <div className=\"chat-messages mb-4 max-h-96 overflow-y-auto p-4 bg-gray-50 rounded-lg\">\n            {messages.length === 0 ? (\n              <div className=\"text-center text-gray-500 py-4\">\n                No messages yet. Start by asking a question about farming or plant varieties.\n              </div>\n            ) : (\n              messages.map((msg) => (\n                <div \n                  key={msg.id} \n                  className={`message ${msg.sender}-message my-2 p-3 rounded-lg ${\n                    msg.sender === 'user' ? 'bg-green-100 ml-auto' : \n                    msg.sender === 'bot' ? 'bg-white border border-green-200' : \n                    msg.isThinking ? 'bg-yellow-50 border border-yellow-200 text-yellow-700' :\n                    'bg-red-100'\n                  } max-w-3/4`}\n                >\n                  <p>{msg.content}</p>\n                  <small className=\"text-xs text-gray-500 mt-1 block\">\n                    {new Date(msg.timestamp).toLocaleTimeString()}\n                  </small>\n                </div>\n              ))\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n          \n          <form id=\"query-form\" className=\"space-y-4\" onSubmit={handleSendMessage}>\n            <textarea \n              id=\"message\" \n              name=\"message\" \n              className=\"w-full p-4 border-2 border-gray-300 rounded-lg shadow-sm text-lg\" \n              placeholder=\"Type your farming question here...\" \n              required \n              rows=\"3\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              disabled={sendingMessage}\n            />\n            <button \n              type=\"submit\" \n              id=\"askAI\"\n              className={`w-full py-3 rounded-lg text-lg font-semibold transition ${\n                sendingMessage \n                  ? 'bg-gray-400 cursor-not-allowed' \n                  : 'bg-green-600 text-white hover:bg-green-700'\n              }`}\n              disabled={sendingMessage}\n            >\n              {sendingMessage ? 'Sending...' : 'Ask'}\n            </button>\n          </form>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}