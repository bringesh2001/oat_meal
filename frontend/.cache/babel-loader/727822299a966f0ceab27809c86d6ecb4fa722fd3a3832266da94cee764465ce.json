{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://your-backend-url/api'; // Replace with your actual backend URL\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Authentication services\nexport const loginUser = async (email, password) => {\n  // Implement actual API call here\n  console.log('Login attempt', email, password);\n  return {\n    user: {\n      name: 'Test User',\n      email\n    },\n    token: 'fake-token'\n  };\n};\nexport const registerUser = async userData => {\n  // Implement actual API call here\n  console.log('Register attempt', userData);\n  return {\n    user: {\n      name: userData.name,\n      email: userData.email\n    },\n    token: 'fake-token'\n  };\n};\n\n// Chat services\nexport const getMessages = async chatId => {\n  // Implement actual API call here\n  console.log('Fetching messages for', chatId);\n  return [{\n    id: 1,\n    sender: 'User 1',\n    content: 'Hello there!',\n    timestamp: new Date(),\n    isCurrentUser: false\n  }, {\n    id: 2,\n    sender: 'You',\n    content: 'Hi! How are you?',\n    timestamp: new Date(),\n    isCurrentUser: true\n  }];\n};\nexport const sendMessage = async (chatId, content) => {\n  // Implement actual API call here\n  console.log('Sending message to', chatId, content);\n  return {\n    success: true\n  };\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","loginUser","email","password","console","log","user","name","registerUser","userData","getMessages","chatId","id","sender","content","timestamp","Date","isCurrentUser","sendMessage","success"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://your-backend-url/api'; // Replace with your actual backend URL\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Authentication services\r\nexport const loginUser = async (email, password) => {\r\n  // Implement actual API call here\r\n  console.log('Login attempt', email, password);\r\n  return { user: { name: 'Test User', email }, token: 'fake-token' };\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  // Implement actual API call here\r\n  console.log('Register attempt', userData);\r\n  return { user: { name: userData.name, email: userData.email }, token: 'fake-token' };\r\n};\r\n\r\n// Chat services\r\nexport const getMessages = async (chatId) => {\r\n  // Implement actual API call here\r\n  console.log('Fetching messages for', chatId);\r\n  return [\r\n    { id: 1, sender: 'User 1', content: 'Hello there!', timestamp: new Date(), isCurrentUser: false },\r\n    { id: 2, sender: 'You', content: 'Hi! How are you?', timestamp: new Date(), isCurrentUser: true }\r\n  ];\r\n};\r\n\r\nexport const sendMessage = async (chatId, content) => {\r\n  // Implement actual API call here\r\n  console.log('Sending message to', chatId, content);\r\n  return { success: true };\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B,CAAC,CAAC;;AAE/C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD;EACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,KAAK,EAAEC,QAAQ,CAAC;EAC7C,OAAO;IAAEG,IAAI,EAAE;MAAEC,IAAI,EAAE,WAAW;MAAEL;IAAM,CAAC;IAAEL,KAAK,EAAE;EAAa,CAAC;AACpE,CAAC;AAED,OAAO,MAAMW,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C;EACAL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,QAAQ,CAAC;EACzC,OAAO;IAAEH,IAAI,EAAE;MAAEC,IAAI,EAAEE,QAAQ,CAACF,IAAI;MAAEL,KAAK,EAAEO,QAAQ,CAACP;IAAM,CAAC;IAAEL,KAAK,EAAE;EAAa,CAAC;AACtF,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C;EACAP,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEM,MAAM,CAAC;EAC5C,OAAO,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,QAAQ;IAAEC,OAAO,EAAE,cAAc;IAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IAAEC,aAAa,EAAE;EAAM,CAAC,EACjG;IAAEL,EAAE,EAAE,CAAC;IAAEC,MAAM,EAAE,KAAK;IAAEC,OAAO,EAAE,kBAAkB;IAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IAAEC,aAAa,EAAE;EAAK,CAAC,CAClG;AACH,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOP,MAAM,EAAEG,OAAO,KAAK;EACpD;EACAV,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEM,MAAM,EAAEG,OAAO,CAAC;EAClD,OAAO;IAAEK,OAAO,EAAE;EAAK,CAAC;AAC1B,CAAC;AAED,eAAe9B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}