{"ast":null,"code":"import axios from 'axios';\n\n// Make sure this points to your Django backend\nconst API_URL = 'http://localhost:8000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request/response interceptors for better error handling\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Response Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const loginUser = async credentials => {\n  try {\n    console.log('Logging in with:', credentials);\n    const response = await api.post('/api/auth/login/', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response3;\n    console.error('Login error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n      message: 'Login failed'\n    };\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    console.log('Registering with:', userData);\n    const response = await api.post('/api/auth/signup/', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response5;\n    console.error('Registration error:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || {\n      message: 'Registration failed'\n    };\n  }\n};\nexport const getUserProfile = async () => {\n  try {\n    const response = await api.get('/api/auth/profile/');\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || {\n      message: 'Failed to fetch profile'\n    };\n  }\n};\n\n// Chat API calls\nexport const sendChatMessage = message => apiCall('/chat/', {\n  method: 'POST',\n  body: JSON.stringify({\n    message\n  })\n});\nexport const getChatHistory = () => apiCall('/chat/history/', {\n  method: 'GET'\n});\n\n// Helper function for API calls\nconst apiCall = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('token');\n  const defaultHeaders = {\n    'Content-Type': 'application/json',\n    ...(token && {\n      Authorization: `Bearer ${token}`\n    })\n  };\n  const config = {\n    ...options,\n    headers: {\n      ...defaultHeaders,\n      ...options.headers\n    }\n  };\n  const response = await fetch(`${API_URL}${endpoint}`, config);\n  if (!response.ok) {\n    const error = await response.json();\n    throw error;\n  }\n  return response.json();\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","_error$response","data","message","loginUser","credentials","log","post","_error$response2","_error$response3","registerUser","userData","_error$response4","_error$response5","getUserProfile","get","_error$response6","sendChatMessage","apiCall","method","body","JSON","stringify","getChatHistory","endpoint","options","defaultHeaders","fetch","ok","json"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Make sure this points to your Django backend\r\nconst API_URL = 'http://localhost:8000';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request/response interceptors for better error handling\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Response Error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    console.log('Logging in with:', credentials);\r\n    const response = await api.post('/api/auth/login/', credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error:', error.response?.data || error.message);\r\n    throw error.response?.data || { message: 'Login failed' };\r\n  }\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    console.log('Registering with:', userData);\r\n    const response = await api.post('/api/auth/signup/', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Registration error:', error.response?.data || error.message);\r\n    throw error.response?.data || { message: 'Registration failed' };\r\n  }\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n  try {\r\n    const response = await api.get('/api/auth/profile/');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Failed to fetch profile' };\r\n  }\r\n};\r\n\r\n// Chat API calls\r\nexport const sendChatMessage = (message) =>\r\n  apiCall('/chat/', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ message }),\r\n  });\r\n\r\nexport const getChatHistory = () =>\r\n  apiCall('/chat/history/', {\r\n    method: 'GET',\r\n  });\r\n\r\n// Helper function for API calls\r\nconst apiCall = async (endpoint, options = {}) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    ...(token && { Authorization: `Bearer ${token}` }),\r\n  };\r\n\r\n  const config = {\r\n    ...options,\r\n    headers: {\r\n      ...defaultHeaders,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  const response = await fetch(`${API_URL}${endpoint}`, config);\r\n  \r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw error;\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}