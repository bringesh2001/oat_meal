{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STSC\\\\Downloads\\\\Agent-Backend-main (3)\\\\my-app\\\\src\\\\pages\\\\DirectoryDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport '../styles/DirectoryDetail.css';\nimport logo from '../images/OatmealaLogoi (1).png'; // Make sure to adjust this path based on your structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DirectoryDetail() {\n  _s();\n  const {\n    directoryType\n  } = useParams();\n  const [countries, setCountries] = useState([]);\n  const [states, setStates] = useState([]);\n  const [businesses, setBusinesses] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Format the directory type for display (convert path slugs to title)\n  const formatTitle = slug => {\n    if (!slug) return '';\n    return slug.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  const title = formatTitle(directoryType);\n\n  // Determine the image to display\n  const getHeaderImage = () => {\n    // You would need to import and map these images based on your directory types\n    // For now, we'll return a placeholder or the directory type\n    return `/images/${directoryType}.png`;\n  };\n\n  // Fetch countries when component mounts\n  useEffect(() => {\n    const loadCountries = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`/api/countries`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch countries');\n        }\n        const data = await response.json();\n        setCountries(data);\n      } catch (error) {\n        console.error('Error loading countries:', error);\n        setError('Failed to load countries. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadCountries();\n  }, []);\n\n  // Fetch states when a country is selected\n  useEffect(() => {\n    if (!selectedCountry) {\n      setStates([]);\n      return;\n    }\n    const loadStates = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`/api/states/${encodeURIComponent(selectedCountry)}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch states');\n        }\n        const data = await response.json();\n        setStates(data);\n      } catch (error) {\n        console.error('Error loading states:', error);\n        setError('Failed to load states. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadStates();\n  }, [selectedCountry]);\n\n  // Fetch businesses when both country and state are selected\n  useEffect(() => {\n    if (!selectedCountry || !selectedState) {\n      setBusinesses([]);\n      return;\n    }\n    const loadBusinesses = async () => {\n      try {\n        setIsLoading(true);\n        const encodedTitle = encodeURIComponent(title);\n        const encodedCountry = encodeURIComponent(selectedCountry);\n        const encodedState = encodeURIComponent(selectedState);\n        const apiUrl = `/api/businesses-by-encoded-title?title=${encodedTitle}&country=${encodedCountry}&state=${encodedState}`;\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error('Failed to fetch businesses');\n        }\n        const data = await response.json();\n        setBusinesses(data);\n      } catch (error) {\n        console.error('Error loading businesses:', error);\n        setError('Failed to load businesses. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadBusinesses();\n  }, [selectedCountry, selectedState, title]);\n\n  // Clear all selections\n  const clearAll = () => {\n    setSelectedCountry('');\n    setSelectedState('');\n    setBusinesses([]);\n  };\n\n  // Debug location\n  const debugLocation = async () => {\n    if (!selectedCountry || !selectedState) {\n      alert('Please select both country and state first');\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const response = await fetch(`/api/location-info/${encodeURIComponent(selectedCountry)}/${encodeURIComponent(selectedState)}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch location info');\n      }\n      const data = await response.json();\n      let message = `Location: ${selectedCountry}, ${selectedState}\\n`;\n      message += `Total businesses: ${data.total_businesses}\\n\\n`;\n      message += 'Business types available in this location:\\n';\n      for (const [type, count] of Object.entries(data.business_types)) {\n        message += `- ${type}: ${count} businesses\\n`;\n      }\n      alert(message);\n    } catch (error) {\n      console.error('Error checking location:', error);\n      alert('Failed to check location data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Oatmeal AI Logo\",\n        className: \"sidebar-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Oatmeal AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/about\",\n            children: \"About Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/team\",\n            children: \"Our Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/contact\",\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getHeaderImage(),\n          alt: `${title} icon`,\n          className: \"header-image\",\n          style: {\n            width: '200px',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCountry,\n            onChange: e => setSelectedCountry(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country,\n              children: country\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedState,\n            onChange: e => setSelectedState(e.target.value),\n            disabled: !selectedCountry,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), states.map((state, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: state,\n              children: state\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-btn\",\n          onClick: clearAll,\n          children: \"Clear all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"debug-btn\",\n          onClick: debugLocation,\n          style: {\n            marginLeft: '10px',\n            backgroundColor: '#f0f0f0',\n            color: '#333'\n          },\n          children: \"Debug Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"candidates\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Result: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"resultCount\",\n            children: businesses.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 23\n          }, this), \" Businesses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"business-list\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this) : businesses.length === 0 && selectedCountry && selectedState ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: \"No businesses found for this location. Please try a different selection.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this) : businesses.map((business, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidate\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"candidate-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: business\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"open-btn\",\n                children: \"Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"detail-btn\",\n              children: \"Detail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(DirectoryDetail, \"RrKg9gt0a5GxS0SyuRLbhvMe070=\", false, function () {\n  return [useParams];\n});\n_c = DirectoryDetail;\nexport default DirectoryDetail;\nvar _c;\n$RefreshReg$(_c, \"DirectoryDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","logo","jsxDEV","_jsxDEV","DirectoryDetail","_s","directoryType","countries","setCountries","states","setStates","businesses","setBusinesses","selectedCountry","setSelectedCountry","selectedState","setSelectedState","isLoading","setIsLoading","error","setError","formatTitle","slug","split","map","word","charAt","toUpperCase","slice","join","title","getHeaderImage","loadCountries","response","fetch","ok","Error","data","json","console","loadStates","encodeURIComponent","loadBusinesses","encodedTitle","encodedCountry","encodedState","apiUrl","clearAll","debugLocation","alert","message","total_businesses","type","count","Object","entries","business_types","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","style","width","height","value","onChange","e","target","country","index","disabled","state","onClick","marginLeft","backgroundColor","color","id","length","business","_c","$RefreshReg$"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/pages/DirectoryDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport '../styles/DirectoryDetail.css';\r\nimport logo from '../images/OatmealaLogoi (1).png'; // Make sure to adjust this path based on your structure\r\n\r\nfunction DirectoryDetail() {\r\n  const { directoryType } = useParams();\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [businesses, setBusinesses] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedState, setSelectedState] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Format the directory type for display (convert path slugs to title)\r\n  const formatTitle = (slug) => {\r\n    if (!slug) return '';\r\n    return slug.split('-')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  };\r\n\r\n  const title = formatTitle(directoryType);\r\n\r\n  // Determine the image to display\r\n  const getHeaderImage = () => {\r\n    // You would need to import and map these images based on your directory types\r\n    // For now, we'll return a placeholder or the directory type\r\n    return `/images/${directoryType}.png`;\r\n  };\r\n\r\n  // Fetch countries when component mounts\r\n  useEffect(() => {\r\n    const loadCountries = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(`/api/countries`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch countries');\r\n        }\r\n        const data = await response.json();\r\n        setCountries(data);\r\n      } catch (error) {\r\n        console.error('Error loading countries:', error);\r\n        setError('Failed to load countries. Please try again later.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadCountries();\r\n  }, []);\r\n\r\n  // Fetch states when a country is selected\r\n  useEffect(() => {\r\n    if (!selectedCountry) {\r\n      setStates([]);\r\n      return;\r\n    }\r\n\r\n    const loadStates = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(`/api/states/${encodeURIComponent(selectedCountry)}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch states');\r\n        }\r\n        const data = await response.json();\r\n        setStates(data);\r\n      } catch (error) {\r\n        console.error('Error loading states:', error);\r\n        setError('Failed to load states. Please try again later.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadStates();\r\n  }, [selectedCountry]);\r\n\r\n  // Fetch businesses when both country and state are selected\r\n  useEffect(() => {\r\n    if (!selectedCountry || !selectedState) {\r\n      setBusinesses([]);\r\n      return;\r\n    }\r\n\r\n    const loadBusinesses = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const encodedTitle = encodeURIComponent(title);\r\n        const encodedCountry = encodeURIComponent(selectedCountry);\r\n        const encodedState = encodeURIComponent(selectedState);\r\n        \r\n        const apiUrl = `/api/businesses-by-encoded-title?title=${encodedTitle}&country=${encodedCountry}&state=${encodedState}`;\r\n        \r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch businesses');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setBusinesses(data);\r\n      } catch (error) {\r\n        console.error('Error loading businesses:', error);\r\n        setError('Failed to load businesses. Please try again later.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadBusinesses();\r\n  }, [selectedCountry, selectedState, title]);\r\n\r\n  // Clear all selections\r\n  const clearAll = () => {\r\n    setSelectedCountry('');\r\n    setSelectedState('');\r\n    setBusinesses([]);\r\n  };\r\n\r\n  // Debug location\r\n  const debugLocation = async () => {\r\n    if (!selectedCountry || !selectedState) {\r\n      alert('Please select both country and state first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`/api/location-info/${encodeURIComponent(selectedCountry)}/${encodeURIComponent(selectedState)}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch location info');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      let message = `Location: ${selectedCountry}, ${selectedState}\\n`;\r\n      message += `Total businesses: ${data.total_businesses}\\n\\n`;\r\n      message += 'Business types available in this location:\\n';\r\n      \r\n      for (const [type, count] of Object.entries(data.business_types)) {\r\n        message += `- ${type}: ${count} businesses\\n`;\r\n      }\r\n      \r\n      alert(message);\r\n    } catch (error) {\r\n      console.error('Error checking location:', error);\r\n      alert('Failed to check location data');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <nav className=\"sidebar\">\r\n        <img src={logo} alt=\"Oatmeal AI Logo\" className=\"sidebar-logo\" />\r\n        <h2>Oatmeal AI</h2>\r\n        <ul>\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/about\">About Us</Link></li>\r\n          <li><Link to=\"/team\">Our Team</Link></li>\r\n          <li><Link to=\"/contact\">Contact Us</Link></li>\r\n        </ul>\r\n      </nav>\r\n      \r\n      <main>\r\n        <header>\r\n          <img \r\n            src={getHeaderImage()} \r\n            alt={`${title} icon`} \r\n            className=\"header-image\" \r\n            style={{ width: '200px', height: 'auto' }} \r\n          />\r\n          <h1>{title}</h1>\r\n        </header>\r\n        \r\n        <div className=\"filter-section\">\r\n          <div className=\"filter-group\">\r\n            <label>Country</label>\r\n            <select \r\n              value={selectedCountry}\r\n              onChange={(e) => setSelectedCountry(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Country</option>\r\n              {countries.map((country, index) => (\r\n                <option key={index} value={country}>{country}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"filter-group\">\r\n            <label>State</label>\r\n            <select \r\n              value={selectedState}\r\n              onChange={(e) => setSelectedState(e.target.value)}\r\n              disabled={!selectedCountry}\r\n            >\r\n              <option value=\"\">Select State</option>\r\n              {states.map((state, index) => (\r\n                <option key={index} value={state}>{state}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <button className=\"clear-btn\" onClick={clearAll}>Clear all</button>\r\n          <button \r\n            className=\"debug-btn\" \r\n            onClick={debugLocation}\r\n            style={{ marginLeft: '10px', backgroundColor: '#f0f0f0', color: '#333' }}\r\n          >\r\n            Debug Location\r\n          </button>\r\n        </div>\r\n        \r\n        <section className=\"candidates\">\r\n          <h2>Result: <span id=\"resultCount\">{businesses.length}</span> Businesses</h2>\r\n          <div id=\"business-list\">\r\n            {isLoading ? (\r\n              <div className=\"loading\">Loading...</div>\r\n            ) : error ? (\r\n              <div className=\"error-message\">{error}</div>\r\n            ) : businesses.length === 0 && (selectedCountry && selectedState) ? (\r\n              <div className=\"error-message\">No businesses found for this location. Please try a different selection.</div>\r\n            ) : (\r\n              businesses.map((business, index) => (\r\n                <div className=\"candidate\" key={index}>\r\n                  <div className=\"candidate-info\">\r\n                    <h3>{business}</h3>\r\n                    <span className=\"open-btn\">Open</span>\r\n                  </div>\r\n                  <button className=\"detail-btn\">Detail</button>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DirectoryDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}