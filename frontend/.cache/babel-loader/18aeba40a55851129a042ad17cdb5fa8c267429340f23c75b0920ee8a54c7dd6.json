{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STSC\\\\Downloads\\\\Agent-Backend-main (3)\\\\my-app\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { loginUser, getUserProfile } from '../services/api';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [backendStatus, setBackendStatus] = useState(null);\n  const [testingBackend, setTestingBackend] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [availableEndpoints, setAvailableEndpoints] = useState([]);\n  const [testingEndpoints, setTestingEndpoints] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [endpointResults, setEndpointResults] = useState(null);\n  const passwordTooltipRef = useRef(null);\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // Test backend connectivity\n  const testBackendConnection = async () => {\n    setTestingBackend(true);\n    setBackendStatus(null);\n    const testEndpoints = ['http://127.0.0.1:8000/'];\n    let connected = false;\n    for (const endpoint of testEndpoints) {\n      try {\n        const response = await axios.get(endpoint, {\n          timeout: 5000\n        });\n        if (response.status >= 200 && response.status < 500) {\n          connected = true;\n          setBackendStatus({\n            connected: true,\n            message: 'Backend server is online.',\n            endpoint: endpoint\n          });\n          break;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          connected = true;\n          setBackendStatus({\n            connected: true,\n            message: 'Backend server is online (404 response).',\n            endpoint: endpoint\n          });\n          break;\n        }\n      }\n    }\n    if (!connected) {\n      setBackendStatus({\n        connected: false,\n        message: 'Cannot connect to backend server. Please ensure the server is running.',\n        error: 'All connection attempts failed'\n      });\n    }\n    setTestingBackend(false);\n  };\n\n  // Test which login endpoints are available\n  const testLoginEndpoints = async () => {\n    setTestingEndpoints(true);\n    setAvailableEndpoints([]);\n    const endpoints = ['http://127.0.0.1:8000/api/auth/login/', 'http://127.0.0.1:8000/apiV1/api/auth/login/', 'http://127.0.0.1:8000/users/api/login/', 'http://127.0.0.1:8000/apiV1/users/api/login/', 'http://127.0.0.1:8000/login/', 'http://127.0.0.1:8000/chatbot/login/'];\n    const available = [];\n    for (const endpoint of endpoints) {\n      try {\n        // Just check if the endpoint exists using OPTIONS method\n        const response = await axios({\n          method: 'options',\n          url: endpoint,\n          timeout: 3000\n        });\n\n        // If no error, endpoint might be valid\n        available.push({\n          url: endpoint,\n          status: response.status,\n          statusText: response.statusText\n        });\n      } catch (error) {\n        // Even a 405 Method Not Allowed is good, it means the endpoint exists\n        if (error.response && error.response.status !== 404) {\n          available.push({\n            url: endpoint,\n            status: error.response.status,\n            statusText: error.response.statusText\n          });\n        }\n      }\n    }\n    setAvailableEndpoints(available);\n    setTestingEndpoints(false);\n  };\n\n  // New function to test backend API endpoints\n  const testApiEndpoints = async () => {\n    setTestingEndpoints(true);\n    setEndpointResults(null);\n    try {\n      // First check if the server is running at all\n      const serverCheck = {\n        'Django Server Status': null\n      };\n      try {\n        var _healthResponse$data;\n        // Try to hit the health check endpoint\n        const healthResponse = await axios({\n          method: 'GET',\n          url: 'http://127.0.0.1:8000/users/health/',\n          timeout: 3000 // 3 second timeout\n        });\n        serverCheck['Django Server Status'] = {\n          status: 'Running',\n          statusCode: healthResponse.status,\n          message: ((_healthResponse$data = healthResponse.data) === null || _healthResponse$data === void 0 ? void 0 : _healthResponse$data.status) || 'OK'\n        };\n      } catch (error) {\n        if (error.response) {\n          // The server responded with an error, but it's running\n          serverCheck['Django Server Status'] = {\n            status: 'Running but returned error',\n            statusCode: error.response.status,\n            error: 'Server responded with an error'\n          };\n        } else if (error.request) {\n          // The request was made but no response was received\n          try {\n            // Try localhost instead of 127.0.0.1\n            const localhostResponse = await axios({\n              method: 'GET',\n              url: 'http://localhost:8000/users/health/',\n              timeout: 3000\n            });\n            serverCheck['Django Server Status'] = {\n              status: 'Running on localhost',\n              statusCode: localhostResponse.status,\n              message: 'Server is accessible via localhost, not 127.0.0.1'\n            };\n          } catch (localhostError) {\n            serverCheck['Django Server Status'] = {\n              status: 'Not running or not accessible',\n              error: 'Could not connect to Django server on 127.0.0.1 or localhost'\n            };\n          }\n        } else {\n          serverCheck['Django Server Status'] = {\n            status: 'Error checking server',\n            error: error.message\n          };\n        }\n      }\n\n      // Define all backend endpoints to test\n      const endpoints = ['http://127.0.0.1:8000/users/api/login/', 'http://localhost:8000/users/api/login/', 'http://127.0.0.1:8000/api/login/', 'http://localhost:8000/api/login/', 'http://127.0.0.1:8000/users/api/register/', 'http://localhost:8000/users/api/register/'];\n      const results = {\n        ...serverCheck\n      };\n\n      // Test each endpoint\n      for (const endpoint of endpoints) {\n        try {\n          var _response$headers;\n          // Use OPTIONS request to check if endpoint exists\n          const response = await axios({\n            method: 'OPTIONS',\n            url: endpoint,\n            timeout: 3000 // 3 second timeout\n          });\n          results[endpoint] = {\n            status: 'Available',\n            statusCode: response.status,\n            methods: ((_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers['allow']) || 'Unknown'\n          };\n        } catch (error) {\n          // Handle different error types\n          if (error.response) {\n            // Server responded with a non-2xx status\n            if (error.response.status === 404) {\n              results[endpoint] = {\n                status: 'Not Found (404)',\n                statusCode: error.response.status,\n                error: 'Endpoint does not exist at this URL'\n              };\n            } else if (error.response.status === 403 || error.response.status === 401) {\n              results[endpoint] = {\n                status: 'Available (requires authentication)',\n                statusCode: error.response.status,\n                message: 'Endpoint exists but requires authentication'\n              };\n            } else {\n              var _error$response$data;\n              results[endpoint] = {\n                status: 'Available but returned error',\n                statusCode: error.response.status,\n                error: ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Server error'\n              };\n            }\n          } else if (error.request) {\n            // Request was made but no response received\n            results[endpoint] = {\n              status: 'No response',\n              error: 'Request timeout or server not responding'\n            };\n          } else {\n            // Error in setting up the request\n            results[endpoint] = {\n              status: 'Error',\n              error: error.message\n            };\n          }\n        }\n      }\n\n      // Add tips based on the results\n      results['TROUBLESHOOTING'] = {\n        status: 'Tips',\n        tips: ['Make sure your Django server is running with `python manage.py runserver`', 'Check that your server is running on port 8000', 'Verify URL configurations in users/urls.py and backend/urls.py', 'Try using localhost instead of 127.0.0.1 if one works but not the other', 'Check if CORS is properly configured in your Django settings']\n      };\n      setEndpointResults(results);\n      console.log('API Endpoint Test Results:', results);\n\n      // Check if we found any working endpoints\n      const workingEndpoints = Object.entries(results).filter(([key, result]) => key !== 'TROUBLESHOOTING' && key !== 'Django Server Status' && (result.status === 'Available' || result.status === 'Available (requires authentication)')).map(([endpoint]) => endpoint);\n      setAvailableEndpoints(workingEndpoints);\n    } catch (error) {\n      console.error('Error testing endpoints:', error);\n      setEndpointResults({\n        error: error.message,\n        TROUBLESHOOTING: {\n          status: 'Error',\n          tips: ['Make sure your Django server is running', 'Check your network connection', 'Verify that CORS is enabled on your server']\n        }\n      });\n    } finally {\n      setTestingEndpoints(false);\n    }\n  };\n  useEffect(() => {\n    testBackendConnection();\n  }, []);\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const handlePasswordFocus = () => {\n    if (passwordTooltipRef.current) {\n      passwordTooltipRef.current.style.display = 'block';\n    }\n  };\n  const handlePasswordBlur = () => {\n    if (passwordTooltipRef.current) {\n      passwordTooltipRef.current.style.display = 'none';\n    }\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n    if (passwordTooltipRef.current) {\n      if (e.target.value.length >= 8) {\n        passwordTooltipRef.current.style.display = 'none';\n      } else {\n        passwordTooltipRef.current.style.display = 'block';\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    // Basic validation\n    if (!email) {\n      setError('Email is required');\n      setLoading(false);\n      return;\n    }\n    if (!password) {\n      setError('Password is required');\n      setLoading(false);\n      return;\n    }\n    try {\n      console.log('Submitting login form with:', {\n        email,\n        password: '*******'\n      });\n      const response = await loginUser({\n        email,\n        password\n      });\n      console.log('Login response:', response);\n      if (response.success) {\n        // Store user state via context\n        await login(response);\n\n        // If remember me is checked, save email to localStorage\n        if (rememberMe) {\n          localStorage.setItem('rememberedEmail', email);\n        } else {\n          localStorage.removeItem('rememberedEmail');\n        }\n        console.log('Redirecting to directories page...');\n        // Redirect to directories page after successful login\n        navigate('/directories');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message || 'Failed to log in. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check for saved email on component mount\n  useEffect(() => {\n    const savedEmail = localStorage.getItem('savedEmail');\n    if (savedEmail) {\n      setEmail(savedEmail);\n      setRememberMe(true);\n    }\n\n    // Check if already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      navigate('/directories');\n    }\n  }, [navigate]);\n\n  // Image animation effect from original code\n  useEffect(() => {\n    const handleMouseMove = event => {\n      const image = document.querySelector('.right-corner-image');\n      if (!image) return;\n      const rect = image.getBoundingClientRect();\n\n      // Check if mouse is over the image\n      const isMouseOverImage = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\n\n      // Only update the position if the mouse is not over the image\n      if (!isMouseOverImage) {\n        image.style.transform = `translate(${event.clientX / 100 - 20}px, ${event.clientY / 100 - 20}px)`;\n      }\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n\n    // Clean up event listener when component unmounts\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/about\",\n          children: \"About Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/team\",\n          children: \"Our Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/contact\",\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }, this), backendStatus && !backendStatus.connected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [backendStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: testBackendConnection,\n            disabled: testingBackend,\n            className: \"retry-button\",\n            children: testingBackend ? 'Testing...' : 'Retry Connection'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), backendStatus && backendStatus.connected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"api-test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: testLoginEndpoints,\n            disabled: testingEndpoints,\n            className: \"test-api-button\",\n            children: testingEndpoints ? 'Testing API Endpoints...' : 'Test Login API Endpoints'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), availableEndpoints.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"endpoint-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Login Endpoints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: availableEndpoints.map((endpoint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [endpoint.url, \" - \", endpoint.status, \" \", endpoint.statusText]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"endpoint-tip\",\n              children: \"Try using one of these endpoints in your login request.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"example@gmail.com\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: passwordVisible ? \"text\" : \"password\",\n              id: \"password\",\n              value: password,\n              onChange: handlePasswordChange,\n              onFocus: handlePasswordFocus,\n              onBlur: handlePasswordBlur,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"eye-icon\",\n              onClick: togglePasswordVisibility,\n              children: passwordVisible ? '🙉' : '🙈'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltip\",\n              ref: passwordTooltipRef,\n              children: \"Enter at least 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"rememberMe\",\n              checked: rememberMe,\n              onChange: e => setRememberMe(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rememberMe\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/forgot-password\",\n              className: \"forgot-password\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-button\",\n              disabled: loading || backendStatus && !backendStatus.connected,\n              children: loading ? 'Signing in...' : 'Sign in'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-container\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"signup-button\",\n            children: \"No account? Join Us \\uD83E\\uDD1D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"api-test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"test-api-button\",\n            onClick: testApiEndpoints,\n            disabled: testingEndpoints,\n            children: testingEndpoints ? \"Testing API Endpoints...\" : \"Test Backend Connectivity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), endpointResults && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"endpoint-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Login Endpoints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Object.entries(endpointResults).map(([endpoint, result]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: endpoint\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 23\n                }, this), \" - \", result.status, result.statusCode && ` (${result.statusCode})`, result.methods && ` - Allowed methods: ${result.methods}`, result.error && ` - ${result.error}`]\n              }, endpoint, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"retry-button\",\n              onClick: testApiEndpoints,\n              children: \"Retry Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/hens.jpg\",\n        alt: \"Right Corner Image\",\n        className: \"right-corner-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"+on/ELMQB8Ey6QpFKbrmIvDZG98=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","Link","useNavigate","AuthContext","loginUser","getUserProfile","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","backendStatus","setBackendStatus","testingBackend","setTestingBackend","rememberMe","setRememberMe","passwordVisible","setPasswordVisible","availableEndpoints","setAvailableEndpoints","testingEndpoints","setTestingEndpoints","showPassword","setShowPassword","endpointResults","setEndpointResults","passwordTooltipRef","login","navigate","testBackendConnection","testEndpoints","connected","endpoint","response","get","timeout","status","message","testLoginEndpoints","endpoints","available","method","url","push","statusText","testApiEndpoints","serverCheck","_healthResponse$data","healthResponse","statusCode","data","request","localhostResponse","localhostError","results","_response$headers","methods","headers","_error$response$data","detail","tips","console","log","workingEndpoints","Object","entries","filter","key","result","map","TROUBLESHOOTING","togglePasswordVisibility","handlePasswordFocus","current","style","display","handlePasswordBlur","handlePasswordChange","e","target","value","length","handleSubmit","preventDefault","success","localStorage","setItem","removeItem","err","savedEmail","getItem","token","handleMouseMove","event","image","document","querySelector","rect","getBoundingClientRect","isMouseOverImage","clientX","left","right","clientY","top","bottom","transform","addEventListener","removeEventListener","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","disabled","index","onSubmit","type","id","onChange","placeholder","required","htmlFor","onFocus","onBlur","ref","checked","to","_c","$RefreshReg$"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { loginUser, getUserProfile } from '../services/api';\r\nimport axios from 'axios';\r\nimport '../styles/Login.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [backendStatus, setBackendStatus] = useState(null);\r\n  const [testingBackend, setTestingBackend] = useState(false);\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [availableEndpoints, setAvailableEndpoints] = useState([]);\r\n  const [testingEndpoints, setTestingEndpoints] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [endpointResults, setEndpointResults] = useState(null);\r\n  const passwordTooltipRef = useRef(null);\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // Test backend connectivity\r\n  const testBackendConnection = async () => {\r\n    setTestingBackend(true);\r\n    setBackendStatus(null);\r\n    \r\n    const testEndpoints = [\r\n      'http://127.0.0.1:8000/'\r\n    ];\r\n    \r\n    let connected = false;\r\n    \r\n    for (const endpoint of testEndpoints) {\r\n      try {\r\n        const response = await axios.get(endpoint, { timeout: 5000 });\r\n        if (response.status >= 200 && response.status < 500) {\r\n          connected = true;\r\n          setBackendStatus({\r\n            connected: true,\r\n            message: 'Backend server is online.',\r\n            endpoint: endpoint\r\n          });\r\n          break;\r\n        }\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          connected = true;\r\n          setBackendStatus({\r\n            connected: true,\r\n            message: 'Backend server is online (404 response).',\r\n            endpoint: endpoint\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (!connected) {\r\n      setBackendStatus({\r\n        connected: false,\r\n        message: 'Cannot connect to backend server. Please ensure the server is running.',\r\n        error: 'All connection attempts failed'\r\n      });\r\n    }\r\n    \r\n    setTestingBackend(false);\r\n  };\r\n  \r\n  // Test which login endpoints are available\r\n  const testLoginEndpoints = async () => {\r\n    setTestingEndpoints(true);\r\n    setAvailableEndpoints([]);\r\n    \r\n    const endpoints = [\r\n      'http://127.0.0.1:8000/api/auth/login/',\r\n      'http://127.0.0.1:8000/apiV1/api/auth/login/',\r\n      'http://127.0.0.1:8000/users/api/login/',\r\n      'http://127.0.0.1:8000/apiV1/users/api/login/',\r\n      'http://127.0.0.1:8000/login/',\r\n      'http://127.0.0.1:8000/chatbot/login/'\r\n    ];\r\n    \r\n    const available = [];\r\n    \r\n    for (const endpoint of endpoints) {\r\n      try {\r\n        // Just check if the endpoint exists using OPTIONS method\r\n        const response = await axios({\r\n          method: 'options',\r\n          url: endpoint,\r\n          timeout: 3000\r\n        });\r\n        \r\n        // If no error, endpoint might be valid\r\n        available.push({\r\n          url: endpoint,\r\n          status: response.status,\r\n          statusText: response.statusText\r\n        });\r\n      } catch (error) {\r\n        // Even a 405 Method Not Allowed is good, it means the endpoint exists\r\n        if (error.response && error.response.status !== 404) {\r\n          available.push({\r\n            url: endpoint,\r\n            status: error.response.status,\r\n            statusText: error.response.statusText\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    setAvailableEndpoints(available);\r\n    setTestingEndpoints(false);\r\n  };\r\n\r\n  // New function to test backend API endpoints\r\n  const testApiEndpoints = async () => {\r\n    setTestingEndpoints(true);\r\n    setEndpointResults(null);\r\n    \r\n    try {\r\n      // First check if the server is running at all\r\n      const serverCheck = {\r\n        'Django Server Status': null\r\n      };\r\n      \r\n      try {\r\n        // Try to hit the health check endpoint\r\n        const healthResponse = await axios({\r\n          method: 'GET',\r\n          url: 'http://127.0.0.1:8000/users/health/',\r\n          timeout: 3000 // 3 second timeout\r\n        });\r\n        \r\n        serverCheck['Django Server Status'] = {\r\n          status: 'Running',\r\n          statusCode: healthResponse.status,\r\n          message: healthResponse.data?.status || 'OK'\r\n        };\r\n      } catch (error) {\r\n        if (error.response) {\r\n          // The server responded with an error, but it's running\r\n          serverCheck['Django Server Status'] = {\r\n            status: 'Running but returned error',\r\n            statusCode: error.response.status,\r\n            error: 'Server responded with an error'\r\n          };\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          try {\r\n            // Try localhost instead of 127.0.0.1\r\n            const localhostResponse = await axios({\r\n              method: 'GET',\r\n              url: 'http://localhost:8000/users/health/',\r\n              timeout: 3000\r\n            });\r\n            \r\n            serverCheck['Django Server Status'] = {\r\n              status: 'Running on localhost',\r\n              statusCode: localhostResponse.status,\r\n              message: 'Server is accessible via localhost, not 127.0.0.1'\r\n            };\r\n          } catch (localhostError) {\r\n            serverCheck['Django Server Status'] = {\r\n              status: 'Not running or not accessible',\r\n              error: 'Could not connect to Django server on 127.0.0.1 or localhost'\r\n            };\r\n          }\r\n        } else {\r\n          serverCheck['Django Server Status'] = {\r\n            status: 'Error checking server',\r\n            error: error.message\r\n          };\r\n        }\r\n      }\r\n      \r\n      // Define all backend endpoints to test\r\n      const endpoints = [\r\n        'http://127.0.0.1:8000/users/api/login/',\r\n        'http://localhost:8000/users/api/login/',\r\n        'http://127.0.0.1:8000/api/login/',\r\n        'http://localhost:8000/api/login/',\r\n        'http://127.0.0.1:8000/users/api/register/',\r\n        'http://localhost:8000/users/api/register/'\r\n      ];\r\n      \r\n      const results = {...serverCheck};\r\n      \r\n      // Test each endpoint\r\n      for (const endpoint of endpoints) {\r\n        try {\r\n          // Use OPTIONS request to check if endpoint exists\r\n          const response = await axios({\r\n            method: 'OPTIONS',\r\n            url: endpoint,\r\n            timeout: 3000 // 3 second timeout\r\n          });\r\n          \r\n          results[endpoint] = {\r\n            status: 'Available',\r\n            statusCode: response.status,\r\n            methods: response.headers?.['allow'] || 'Unknown'\r\n          };\r\n          \r\n        } catch (error) {\r\n          // Handle different error types\r\n          if (error.response) {\r\n            // Server responded with a non-2xx status\r\n            if (error.response.status === 404) {\r\n              results[endpoint] = {\r\n                status: 'Not Found (404)',\r\n                statusCode: error.response.status,\r\n                error: 'Endpoint does not exist at this URL'\r\n              };\r\n            } else if (error.response.status === 403 || error.response.status === 401) {\r\n              results[endpoint] = {\r\n                status: 'Available (requires authentication)',\r\n                statusCode: error.response.status,\r\n                message: 'Endpoint exists but requires authentication'\r\n              };\r\n            } else {\r\n              results[endpoint] = {\r\n                status: 'Available but returned error',\r\n                statusCode: error.response.status,\r\n                error: error.response.data?.detail || 'Server error'\r\n              };\r\n            }\r\n          } else if (error.request) {\r\n            // Request was made but no response received\r\n            results[endpoint] = {\r\n              status: 'No response',\r\n              error: 'Request timeout or server not responding'\r\n            };\r\n          } else {\r\n            // Error in setting up the request\r\n            results[endpoint] = {\r\n              status: 'Error',\r\n              error: error.message\r\n            };\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Add tips based on the results\r\n      results['TROUBLESHOOTING'] = {\r\n        status: 'Tips',\r\n        tips: [\r\n          'Make sure your Django server is running with `python manage.py runserver`',\r\n          'Check that your server is running on port 8000',\r\n          'Verify URL configurations in users/urls.py and backend/urls.py',\r\n          'Try using localhost instead of 127.0.0.1 if one works but not the other',\r\n          'Check if CORS is properly configured in your Django settings'\r\n        ]\r\n      };\r\n      \r\n      setEndpointResults(results);\r\n      console.log('API Endpoint Test Results:', results);\r\n      \r\n      // Check if we found any working endpoints\r\n      const workingEndpoints = Object.entries(results)\r\n        .filter(([key, result]) => \r\n          key !== 'TROUBLESHOOTING' && \r\n          key !== 'Django Server Status' && \r\n          (result.status === 'Available' || result.status === 'Available (requires authentication)')\r\n        )\r\n        .map(([endpoint]) => endpoint);\r\n      \r\n      setAvailableEndpoints(workingEndpoints);\r\n      \r\n    } catch (error) {\r\n      console.error('Error testing endpoints:', error);\r\n      setEndpointResults({ \r\n        error: error.message,\r\n        TROUBLESHOOTING: {\r\n          status: 'Error',\r\n          tips: [\r\n            'Make sure your Django server is running',\r\n            'Check your network connection',\r\n            'Verify that CORS is enabled on your server'\r\n          ]\r\n        }\r\n      });\r\n    } finally {\r\n      setTestingEndpoints(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    testBackendConnection();\r\n  }, []);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  const handlePasswordFocus = () => {\r\n    if (passwordTooltipRef.current) {\r\n      passwordTooltipRef.current.style.display = 'block';\r\n    }\r\n  };\r\n\r\n  const handlePasswordBlur = () => {\r\n    if (passwordTooltipRef.current) {\r\n      passwordTooltipRef.current.style.display = 'none';\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n    if (passwordTooltipRef.current) {\r\n      if (e.target.value.length >= 8) {\r\n        passwordTooltipRef.current.style.display = 'none';\r\n      } else {\r\n        passwordTooltipRef.current.style.display = 'block';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    \r\n    // Basic validation\r\n    if (!email) {\r\n      setError('Email is required');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    if (!password) {\r\n      setError('Password is required');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log('Submitting login form with:', { email, password: '*******' });\r\n      const response = await loginUser({ email, password });\r\n      \r\n      console.log('Login response:', response);\r\n      \r\n      if (response.success) {\r\n        // Store user state via context\r\n        await login(response);\r\n        \r\n        // If remember me is checked, save email to localStorage\r\n        if (rememberMe) {\r\n          localStorage.setItem('rememberedEmail', email);\r\n        } else {\r\n          localStorage.removeItem('rememberedEmail');\r\n        }\r\n        \r\n        console.log('Redirecting to directories page...');\r\n        // Redirect to directories page after successful login\r\n        navigate('/directories');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.message || 'Failed to log in. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Check for saved email on component mount\r\n  useEffect(() => {\r\n    const savedEmail = localStorage.getItem('savedEmail');\r\n    if (savedEmail) {\r\n      setEmail(savedEmail);\r\n      setRememberMe(true);\r\n    }\r\n    \r\n    // Check if already logged in\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      navigate('/directories');\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Image animation effect from original code\r\n  useEffect(() => {\r\n    const handleMouseMove = (event) => {\r\n      const image = document.querySelector('.right-corner-image');\r\n      if (!image) return;\r\n      \r\n      const rect = image.getBoundingClientRect();\r\n      \r\n      // Check if mouse is over the image\r\n      const isMouseOverImage = (\r\n        event.clientX >= rect.left &&\r\n        event.clientX <= rect.right &&\r\n        event.clientY >= rect.top &&\r\n        event.clientY <= rect.bottom\r\n      );\r\n      \r\n      // Only update the position if the mouse is not over the image\r\n      if (!isMouseOverImage) {\r\n        image.style.transform = `translate(${event.clientX / 100 - 20}px, ${event.clientY / 100 - 20}px)`;\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    \r\n    // Clean up event listener when component unmounts\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <nav className=\"navbar\">\r\n        <img src=\"/logo.png\" alt=\"Logo\" className=\"logo\" />\r\n        <div className=\"nav-links\">\r\n          <a href=\"/\">Home</a>\r\n          <a href=\"/about\">About Us</a>\r\n          <a href=\"/team\">Our Team</a>\r\n          <a href=\"/contact\">Contact Us</a>\r\n        </div>\r\n      </nav>\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"form-container\">\r\n          <h2>Sign in</h2>\r\n          \r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          \r\n          {backendStatus && !backendStatus.connected && (\r\n            <div className=\"error-message\">\r\n              {backendStatus.message}\r\n              <button \r\n                onClick={testBackendConnection}\r\n                disabled={testingBackend}\r\n                className=\"retry-button\"\r\n              >\r\n                {testingBackend ? 'Testing...' : 'Retry Connection'}\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {backendStatus && backendStatus.connected && (\r\n            <div className=\"api-test-section\">\r\n              <button \r\n                onClick={testLoginEndpoints}\r\n                disabled={testingEndpoints}\r\n                className=\"test-api-button\"\r\n              >\r\n                {testingEndpoints ? 'Testing API Endpoints...' : 'Test Login API Endpoints'}\r\n              </button>\r\n              \r\n              {availableEndpoints.length > 0 && (\r\n                <div className=\"endpoint-results\">\r\n                  <h3>Available Login Endpoints:</h3>\r\n                  <ul>\r\n                    {availableEndpoints.map((endpoint, index) => (\r\n                      <li key={index}>\r\n                        {endpoint.url} - {endpoint.status} {endpoint.statusText}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  <p className=\"endpoint-tip\">\r\n                    Try using one of these endpoints in your login request.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"textbox\">\r\n              <input \r\n                type=\"email\" \r\n                id=\"email\" \r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"example@gmail.com\"\r\n                required \r\n              />\r\n              <label className=\"label\" htmlFor=\"email\">Email</label>\r\n            </div>\r\n            \r\n            <div className=\"textbox\">\r\n              <input \r\n                type={passwordVisible ? \"text\" : \"password\"}\r\n                id=\"password\" \r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                onFocus={handlePasswordFocus}\r\n                onBlur={handlePasswordBlur}\r\n                required \r\n              />\r\n              <label className=\"label\" htmlFor=\"password\">Password</label>\r\n              <span className=\"eye-icon\" onClick={togglePasswordVisibility}>\r\n                {passwordVisible ? '🙉' : '🙈'}\r\n              </span>\r\n              <span className=\"tooltip\" ref={passwordTooltipRef}>Enter at least 8 characters</span>\r\n            </div>\r\n            \r\n            <div className=\"checkbox-container\">\r\n              <input \r\n                type=\"checkbox\" \r\n                id=\"rememberMe\"\r\n                checked={rememberMe}\r\n                onChange={(e) => setRememberMe(e.target.checked)} \r\n              />\r\n              <label htmlFor=\"rememberMe\">Remember me</label>\r\n              <a href=\"/forgot-password\" className=\"forgot-password\">Forgot Password?</a>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <button \r\n                type=\"submit\" \r\n                className=\"login-button\" \r\n                disabled={loading || (backendStatus && !backendStatus.connected)}\r\n              >\r\n                {loading ? 'Signing in...' : 'Sign in'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n          \r\n          <div className=\"signup-container\">\r\n            <Link to=\"/signup\" className=\"signup-button\">No account? Join Us 🤝</Link>\r\n          </div>\r\n\r\n          {/* API Testing Section */}\r\n          <div className=\"api-test-section\">\r\n            <button \r\n              type=\"button\" \r\n              className=\"test-api-button\" \r\n              onClick={testApiEndpoints}\r\n              disabled={testingEndpoints}\r\n            >\r\n              {testingEndpoints ? \"Testing API Endpoints...\" : \"Test Backend Connectivity\"}\r\n            </button>\r\n            \r\n            {endpointResults && (\r\n              <div className=\"endpoint-results\">\r\n                <h3>Available Login Endpoints:</h3>\r\n                <ul>\r\n                  {Object.entries(endpointResults).map(([endpoint, result]) => (\r\n                    <li key={endpoint}>\r\n                      <strong>{endpoint}</strong> - {result.status} \r\n                      {result.statusCode && ` (${result.statusCode})`}\r\n                      {result.methods && ` - Allowed methods: ${result.methods}`}\r\n                      {result.error && ` - ${result.error}`}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"retry-button\"\r\n                  onClick={testApiEndpoints}\r\n                >\r\n                  Retry Test\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <img src=\"/hens.jpg\" alt=\"Right Corner Image\" className=\"right-corner-image\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}