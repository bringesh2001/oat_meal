{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STSC\\\\Downloads\\\\Agent-Backend-main (3)\\\\my-app\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { loginUser, getUserProfile } from '../services/api';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [backendStatus, setBackendStatus] = useState(null);\n  const [testingBackend, setTestingBackend] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [availableEndpoints, setAvailableEndpoints] = useState([]);\n  const [testingEndpoints, setTestingEndpoints] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [endpointResults, setEndpointResults] = useState(null);\n  const passwordTooltipRef = useRef(null);\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // Test backend connectivity\n  const testBackendConnection = async () => {\n    setTestingBackend(true);\n    setBackendStatus(null);\n    const testEndpoints = ['http://127.0.0.1:8000/'];\n    let connected = false;\n    for (const endpoint of testEndpoints) {\n      try {\n        const response = await axios.get(endpoint, {\n          timeout: 5000\n        });\n        if (response.status >= 200 && response.status < 500) {\n          connected = true;\n          setBackendStatus({\n            connected: true,\n            message: 'Backend server is online.',\n            endpoint: endpoint\n          });\n          break;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          connected = true;\n          setBackendStatus({\n            connected: true,\n            message: 'Backend server is online (404 response).',\n            endpoint: endpoint\n          });\n          break;\n        }\n      }\n    }\n    if (!connected) {\n      setBackendStatus({\n        connected: false,\n        message: 'Cannot connect to backend server. Please ensure the server is running.',\n        error: 'All connection attempts failed'\n      });\n    }\n    setTestingBackend(false);\n  };\n\n  // Test which login endpoints are available\n  const testLoginEndpoints = async () => {\n    setTestingEndpoints(true);\n    setAvailableEndpoints([]);\n    const endpoints = ['http://127.0.0.1:8000/api/auth/login/', 'http://127.0.0.1:8000/apiV1/api/auth/login/', 'http://127.0.0.1:8000/users/api/login/', 'http://127.0.0.1:8000/apiV1/users/api/login/', 'http://127.0.0.1:8000/login/', 'http://127.0.0.1:8000/chatbot/login/'];\n    const available = [];\n    for (const endpoint of endpoints) {\n      try {\n        // Just check if the endpoint exists using OPTIONS method\n        const response = await axios({\n          method: 'options',\n          url: endpoint,\n          timeout: 3000\n        });\n\n        // If no error, endpoint might be valid\n        available.push({\n          url: endpoint,\n          status: response.status,\n          statusText: response.statusText\n        });\n      } catch (error) {\n        // Even a 405 Method Not Allowed is good, it means the endpoint exists\n        if (error.response && error.response.status !== 404) {\n          available.push({\n            url: endpoint,\n            status: error.response.status,\n            statusText: error.response.statusText\n          });\n        }\n      }\n    }\n    setAvailableEndpoints(available);\n    setTestingEndpoints(false);\n  };\n\n  // New function to test backend API endpoints\n  const testApiEndpoints = async () => {\n    setTestingEndpoints(true);\n    setEndpointResults(null);\n    try {\n      // Define all backend endpoints to test\n      const endpoints = ['http://127.0.0.1:8000/api/auth/login/', 'http://127.0.0.1:8000/users/api/login/', 'http://127.0.0.1:8000/apiV1/api/auth/login/', 'http://127.0.0.1:8000/api/auth/signup/', 'http://127.0.0.1:8000/users/api/register/'];\n      const results = {};\n\n      // Test each endpoint\n      for (const endpoint of endpoints) {\n        try {\n          var _response$headers;\n          // Use OPTIONS request to check if endpoint exists\n          const response = await axios({\n            method: 'OPTIONS',\n            url: endpoint,\n            timeout: 3000 // 3 second timeout\n          });\n          results[endpoint] = {\n            status: 'Available',\n            statusCode: response.status,\n            methods: ((_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers['allow']) || 'Unknown'\n          };\n        } catch (error) {\n          // Handle different error types\n          if (error.response) {\n            var _error$response$data;\n            // Server responded with a non-2xx status\n            results[endpoint] = {\n              status: 'Available but requires authentication',\n              statusCode: error.response.status,\n              error: ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Server error'\n            };\n          } else if (error.request) {\n            // Request was made but no response received\n            results[endpoint] = {\n              status: 'No response',\n              error: 'Could not connect to server'\n            };\n          } else {\n            // Error in setting up the request\n            results[endpoint] = {\n              status: 'Error',\n              error: error.message\n            };\n          }\n        }\n      }\n      setEndpointResults(results);\n      console.log('API Endpoint Test Results:', results);\n    } catch (error) {\n      console.error('Error testing endpoints:', error);\n      setEndpointResults({\n        error: error.message\n      });\n    } finally {\n      setTestingEndpoints(false);\n    }\n  };\n  useEffect(() => {\n    testBackendConnection();\n  }, []);\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const handlePasswordFocus = () => {\n    if (passwordTooltipRef.current) {\n      passwordTooltipRef.current.style.display = 'block';\n    }\n  };\n  const handlePasswordBlur = () => {\n    if (passwordTooltipRef.current) {\n      passwordTooltipRef.current.style.display = 'none';\n    }\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n    if (passwordTooltipRef.current) {\n      if (e.target.value.length >= 8) {\n        passwordTooltipRef.current.style.display = 'none';\n      } else {\n        passwordTooltipRef.current.style.display = 'block';\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    // Basic validation\n    if (!email) {\n      setError('Email is required');\n      setLoading(false);\n      return;\n    }\n    if (!password) {\n      setError('Password is required');\n      setLoading(false);\n      return;\n    }\n    try {\n      console.log('Submitting login form with:', {\n        email,\n        password: '*******'\n      });\n      const response = await loginUser({\n        email,\n        password\n      });\n      console.log('Login response:', response);\n      if (response.success) {\n        // Store user state via context\n        await login(response);\n\n        // If remember me is checked, save email to localStorage\n        if (rememberMe) {\n          localStorage.setItem('rememberedEmail', email);\n        } else {\n          localStorage.removeItem('rememberedEmail');\n        }\n        console.log('Redirecting to directories page...');\n        // Redirect to directories page after successful login\n        navigate('/directories');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message || 'Failed to log in. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check for saved email on component mount\n  useEffect(() => {\n    const savedEmail = localStorage.getItem('savedEmail');\n    if (savedEmail) {\n      setEmail(savedEmail);\n      setRememberMe(true);\n    }\n\n    // Check if already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      navigate('/directories');\n    }\n  }, [navigate]);\n\n  // Image animation effect from original code\n  useEffect(() => {\n    const handleMouseMove = event => {\n      const image = document.querySelector('.right-corner-image');\n      if (!image) return;\n      const rect = image.getBoundingClientRect();\n\n      // Check if mouse is over the image\n      const isMouseOverImage = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\n\n      // Only update the position if the mouse is not over the image\n      if (!isMouseOverImage) {\n        image.style.transform = `translate(${event.clientX / 100 - 20}px, ${event.clientY / 100 - 20}px)`;\n      }\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n\n    // Clean up event listener when component unmounts\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/about\",\n          children: \"About Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/team\",\n          children: \"Our Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/contact\",\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), backendStatus && !backendStatus.connected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [backendStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: testBackendConnection,\n            disabled: testingBackend,\n            className: \"retry-button\",\n            children: testingBackend ? 'Testing...' : 'Retry Connection'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), backendStatus && backendStatus.connected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"api-test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: testLoginEndpoints,\n            disabled: testingEndpoints,\n            className: \"test-api-button\",\n            children: testingEndpoints ? 'Testing API Endpoints...' : 'Test Login API Endpoints'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), availableEndpoints.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"endpoint-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Login Endpoints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: availableEndpoints.map((endpoint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [endpoint.url, \" - \", endpoint.status, \" \", endpoint.statusText]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"endpoint-tip\",\n              children: \"Try using one of these endpoints in your login request.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"example@gmail.com\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: passwordVisible ? \"text\" : \"password\",\n              id: \"password\",\n              value: password,\n              onChange: handlePasswordChange,\n              onFocus: handlePasswordFocus,\n              onBlur: handlePasswordBlur,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"eye-icon\",\n              onClick: togglePasswordVisibility,\n              children: passwordVisible ? '🙉' : '🙈'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltip\",\n              ref: passwordTooltipRef,\n              children: \"Enter at least 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"rememberMe\",\n              checked: rememberMe,\n              onChange: e => setRememberMe(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rememberMe\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/forgot-password\",\n              className: \"forgot-password\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-button\",\n              disabled: loading || backendStatus && !backendStatus.connected,\n              children: loading ? 'Signing in...' : 'Sign in'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-container\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"signup-button\",\n            children: \"No account? Join Us \\uD83E\\uDD1D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"api-test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"test-api-button\",\n            onClick: testApiEndpoints,\n            disabled: testingEndpoints,\n            children: testingEndpoints ? \"Testing API Endpoints...\" : \"Test Backend Connectivity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), endpointResults && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"endpoint-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Login Endpoints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Object.entries(endpointResults).map(([endpoint, result]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: endpoint\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 23\n                }, this), \" - \", result.status, result.statusCode && ` (${result.statusCode})`, result.methods && ` - Allowed methods: ${result.methods}`, result.error && ` - ${result.error}`]\n              }, endpoint, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"retry-button\",\n              onClick: testApiEndpoints,\n              children: \"Retry Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/hens.jpg\",\n        alt: \"Right Corner Image\",\n        className: \"right-corner-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"+on/ELMQB8Ey6QpFKbrmIvDZG98=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","Link","useNavigate","AuthContext","loginUser","getUserProfile","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","backendStatus","setBackendStatus","testingBackend","setTestingBackend","rememberMe","setRememberMe","passwordVisible","setPasswordVisible","availableEndpoints","setAvailableEndpoints","testingEndpoints","setTestingEndpoints","showPassword","setShowPassword","endpointResults","setEndpointResults","passwordTooltipRef","login","navigate","testBackendConnection","testEndpoints","connected","endpoint","response","get","timeout","status","message","testLoginEndpoints","endpoints","available","method","url","push","statusText","testApiEndpoints","results","_response$headers","statusCode","methods","headers","_error$response$data","data","detail","request","console","log","togglePasswordVisibility","handlePasswordFocus","current","style","display","handlePasswordBlur","handlePasswordChange","e","target","value","length","handleSubmit","preventDefault","success","localStorage","setItem","removeItem","err","savedEmail","getItem","token","handleMouseMove","event","image","document","querySelector","rect","getBoundingClientRect","isMouseOverImage","clientX","left","right","clientY","top","bottom","transform","addEventListener","removeEventListener","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","disabled","map","index","onSubmit","type","id","onChange","placeholder","required","htmlFor","onFocus","onBlur","ref","checked","to","Object","entries","result","_c","$RefreshReg$"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { loginUser, getUserProfile } from '../services/api';\r\nimport axios from 'axios';\r\nimport '../styles/Login.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [backendStatus, setBackendStatus] = useState(null);\r\n  const [testingBackend, setTestingBackend] = useState(false);\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [availableEndpoints, setAvailableEndpoints] = useState([]);\r\n  const [testingEndpoints, setTestingEndpoints] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [endpointResults, setEndpointResults] = useState(null);\r\n  const passwordTooltipRef = useRef(null);\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // Test backend connectivity\r\n  const testBackendConnection = async () => {\r\n    setTestingBackend(true);\r\n    setBackendStatus(null);\r\n    \r\n    const testEndpoints = [\r\n      'http://127.0.0.1:8000/'\r\n    ];\r\n    \r\n    let connected = false;\r\n    \r\n    for (const endpoint of testEndpoints) {\r\n      try {\r\n        const response = await axios.get(endpoint, { timeout: 5000 });\r\n        if (response.status >= 200 && response.status < 500) {\r\n          connected = true;\r\n          setBackendStatus({\r\n            connected: true,\r\n            message: 'Backend server is online.',\r\n            endpoint: endpoint\r\n          });\r\n          break;\r\n        }\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 404) {\r\n          connected = true;\r\n          setBackendStatus({\r\n            connected: true,\r\n            message: 'Backend server is online (404 response).',\r\n            endpoint: endpoint\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (!connected) {\r\n      setBackendStatus({\r\n        connected: false,\r\n        message: 'Cannot connect to backend server. Please ensure the server is running.',\r\n        error: 'All connection attempts failed'\r\n      });\r\n    }\r\n    \r\n    setTestingBackend(false);\r\n  };\r\n  \r\n  // Test which login endpoints are available\r\n  const testLoginEndpoints = async () => {\r\n    setTestingEndpoints(true);\r\n    setAvailableEndpoints([]);\r\n    \r\n    const endpoints = [\r\n      'http://127.0.0.1:8000/api/auth/login/',\r\n      'http://127.0.0.1:8000/apiV1/api/auth/login/',\r\n      'http://127.0.0.1:8000/users/api/login/',\r\n      'http://127.0.0.1:8000/apiV1/users/api/login/',\r\n      'http://127.0.0.1:8000/login/',\r\n      'http://127.0.0.1:8000/chatbot/login/'\r\n    ];\r\n    \r\n    const available = [];\r\n    \r\n    for (const endpoint of endpoints) {\r\n      try {\r\n        // Just check if the endpoint exists using OPTIONS method\r\n        const response = await axios({\r\n          method: 'options',\r\n          url: endpoint,\r\n          timeout: 3000\r\n        });\r\n        \r\n        // If no error, endpoint might be valid\r\n        available.push({\r\n          url: endpoint,\r\n          status: response.status,\r\n          statusText: response.statusText\r\n        });\r\n      } catch (error) {\r\n        // Even a 405 Method Not Allowed is good, it means the endpoint exists\r\n        if (error.response && error.response.status !== 404) {\r\n          available.push({\r\n            url: endpoint,\r\n            status: error.response.status,\r\n            statusText: error.response.statusText\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    setAvailableEndpoints(available);\r\n    setTestingEndpoints(false);\r\n  };\r\n\r\n  // New function to test backend API endpoints\r\n  const testApiEndpoints = async () => {\r\n    setTestingEndpoints(true);\r\n    setEndpointResults(null);\r\n    \r\n    try {\r\n      // Define all backend endpoints to test\r\n      const endpoints = [\r\n        'http://127.0.0.1:8000/api/auth/login/',\r\n        'http://127.0.0.1:8000/users/api/login/',\r\n        'http://127.0.0.1:8000/apiV1/api/auth/login/',\r\n        'http://127.0.0.1:8000/api/auth/signup/',\r\n        'http://127.0.0.1:8000/users/api/register/'\r\n      ];\r\n      \r\n      const results = {};\r\n      \r\n      // Test each endpoint\r\n      for (const endpoint of endpoints) {\r\n        try {\r\n          // Use OPTIONS request to check if endpoint exists\r\n          const response = await axios({\r\n            method: 'OPTIONS',\r\n            url: endpoint,\r\n            timeout: 3000 // 3 second timeout\r\n          });\r\n          \r\n          results[endpoint] = {\r\n            status: 'Available',\r\n            statusCode: response.status,\r\n            methods: response.headers?.['allow'] || 'Unknown'\r\n          };\r\n          \r\n        } catch (error) {\r\n          // Handle different error types\r\n          if (error.response) {\r\n            // Server responded with a non-2xx status\r\n            results[endpoint] = {\r\n              status: 'Available but requires authentication',\r\n              statusCode: error.response.status,\r\n              error: error.response.data?.detail || 'Server error'\r\n            };\r\n          } else if (error.request) {\r\n            // Request was made but no response received\r\n            results[endpoint] = {\r\n              status: 'No response',\r\n              error: 'Could not connect to server'\r\n            };\r\n          } else {\r\n            // Error in setting up the request\r\n            results[endpoint] = {\r\n              status: 'Error',\r\n              error: error.message\r\n            };\r\n          }\r\n        }\r\n      }\r\n      \r\n      setEndpointResults(results);\r\n      console.log('API Endpoint Test Results:', results);\r\n    } catch (error) {\r\n      console.error('Error testing endpoints:', error);\r\n      setEndpointResults({ error: error.message });\r\n    } finally {\r\n      setTestingEndpoints(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    testBackendConnection();\r\n  }, []);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  const handlePasswordFocus = () => {\r\n    if (passwordTooltipRef.current) {\r\n      passwordTooltipRef.current.style.display = 'block';\r\n    }\r\n  };\r\n\r\n  const handlePasswordBlur = () => {\r\n    if (passwordTooltipRef.current) {\r\n      passwordTooltipRef.current.style.display = 'none';\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n    if (passwordTooltipRef.current) {\r\n      if (e.target.value.length >= 8) {\r\n        passwordTooltipRef.current.style.display = 'none';\r\n      } else {\r\n        passwordTooltipRef.current.style.display = 'block';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    \r\n    // Basic validation\r\n    if (!email) {\r\n      setError('Email is required');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    if (!password) {\r\n      setError('Password is required');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log('Submitting login form with:', { email, password: '*******' });\r\n      const response = await loginUser({ email, password });\r\n      \r\n      console.log('Login response:', response);\r\n      \r\n      if (response.success) {\r\n        // Store user state via context\r\n        await login(response);\r\n        \r\n        // If remember me is checked, save email to localStorage\r\n        if (rememberMe) {\r\n          localStorage.setItem('rememberedEmail', email);\r\n        } else {\r\n          localStorage.removeItem('rememberedEmail');\r\n        }\r\n        \r\n        console.log('Redirecting to directories page...');\r\n        // Redirect to directories page after successful login\r\n        navigate('/directories');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.message || 'Failed to log in. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Check for saved email on component mount\r\n  useEffect(() => {\r\n    const savedEmail = localStorage.getItem('savedEmail');\r\n    if (savedEmail) {\r\n      setEmail(savedEmail);\r\n      setRememberMe(true);\r\n    }\r\n    \r\n    // Check if already logged in\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      navigate('/directories');\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Image animation effect from original code\r\n  useEffect(() => {\r\n    const handleMouseMove = (event) => {\r\n      const image = document.querySelector('.right-corner-image');\r\n      if (!image) return;\r\n      \r\n      const rect = image.getBoundingClientRect();\r\n      \r\n      // Check if mouse is over the image\r\n      const isMouseOverImage = (\r\n        event.clientX >= rect.left &&\r\n        event.clientX <= rect.right &&\r\n        event.clientY >= rect.top &&\r\n        event.clientY <= rect.bottom\r\n      );\r\n      \r\n      // Only update the position if the mouse is not over the image\r\n      if (!isMouseOverImage) {\r\n        image.style.transform = `translate(${event.clientX / 100 - 20}px, ${event.clientY / 100 - 20}px)`;\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    \r\n    // Clean up event listener when component unmounts\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <nav className=\"navbar\">\r\n        <img src=\"/logo.png\" alt=\"Logo\" className=\"logo\" />\r\n        <div className=\"nav-links\">\r\n          <a href=\"/\">Home</a>\r\n          <a href=\"/about\">About Us</a>\r\n          <a href=\"/team\">Our Team</a>\r\n          <a href=\"/contact\">Contact Us</a>\r\n        </div>\r\n      </nav>\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"form-container\">\r\n          <h2>Sign in</h2>\r\n          \r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          \r\n          {backendStatus && !backendStatus.connected && (\r\n            <div className=\"error-message\">\r\n              {backendStatus.message}\r\n              <button \r\n                onClick={testBackendConnection}\r\n                disabled={testingBackend}\r\n                className=\"retry-button\"\r\n              >\r\n                {testingBackend ? 'Testing...' : 'Retry Connection'}\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {backendStatus && backendStatus.connected && (\r\n            <div className=\"api-test-section\">\r\n              <button \r\n                onClick={testLoginEndpoints}\r\n                disabled={testingEndpoints}\r\n                className=\"test-api-button\"\r\n              >\r\n                {testingEndpoints ? 'Testing API Endpoints...' : 'Test Login API Endpoints'}\r\n              </button>\r\n              \r\n              {availableEndpoints.length > 0 && (\r\n                <div className=\"endpoint-results\">\r\n                  <h3>Available Login Endpoints:</h3>\r\n                  <ul>\r\n                    {availableEndpoints.map((endpoint, index) => (\r\n                      <li key={index}>\r\n                        {endpoint.url} - {endpoint.status} {endpoint.statusText}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  <p className=\"endpoint-tip\">\r\n                    Try using one of these endpoints in your login request.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"textbox\">\r\n              <input \r\n                type=\"email\" \r\n                id=\"email\" \r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"example@gmail.com\"\r\n                required \r\n              />\r\n              <label className=\"label\" htmlFor=\"email\">Email</label>\r\n            </div>\r\n            \r\n            <div className=\"textbox\">\r\n              <input \r\n                type={passwordVisible ? \"text\" : \"password\"}\r\n                id=\"password\" \r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                onFocus={handlePasswordFocus}\r\n                onBlur={handlePasswordBlur}\r\n                required \r\n              />\r\n              <label className=\"label\" htmlFor=\"password\">Password</label>\r\n              <span className=\"eye-icon\" onClick={togglePasswordVisibility}>\r\n                {passwordVisible ? '🙉' : '🙈'}\r\n              </span>\r\n              <span className=\"tooltip\" ref={passwordTooltipRef}>Enter at least 8 characters</span>\r\n            </div>\r\n            \r\n            <div className=\"checkbox-container\">\r\n              <input \r\n                type=\"checkbox\" \r\n                id=\"rememberMe\"\r\n                checked={rememberMe}\r\n                onChange={(e) => setRememberMe(e.target.checked)} \r\n              />\r\n              <label htmlFor=\"rememberMe\">Remember me</label>\r\n              <a href=\"/forgot-password\" className=\"forgot-password\">Forgot Password?</a>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <button \r\n                type=\"submit\" \r\n                className=\"login-button\" \r\n                disabled={loading || (backendStatus && !backendStatus.connected)}\r\n              >\r\n                {loading ? 'Signing in...' : 'Sign in'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n          \r\n          <div className=\"signup-container\">\r\n            <Link to=\"/signup\" className=\"signup-button\">No account? Join Us 🤝</Link>\r\n          </div>\r\n\r\n          {/* API Testing Section */}\r\n          <div className=\"api-test-section\">\r\n            <button \r\n              type=\"button\" \r\n              className=\"test-api-button\" \r\n              onClick={testApiEndpoints}\r\n              disabled={testingEndpoints}\r\n            >\r\n              {testingEndpoints ? \"Testing API Endpoints...\" : \"Test Backend Connectivity\"}\r\n            </button>\r\n            \r\n            {endpointResults && (\r\n              <div className=\"endpoint-results\">\r\n                <h3>Available Login Endpoints:</h3>\r\n                <ul>\r\n                  {Object.entries(endpointResults).map(([endpoint, result]) => (\r\n                    <li key={endpoint}>\r\n                      <strong>{endpoint}</strong> - {result.status} \r\n                      {result.statusCode && ` (${result.statusCode})`}\r\n                      {result.methods && ` - Allowed methods: ${result.methods}`}\r\n                      {result.error && ` - ${result.error}`}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"retry-button\"\r\n                  onClick={testApiEndpoints}\r\n                >\r\n                  Retry Test\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <img src=\"/hens.jpg\" alt=\"Right Corner Image\" className=\"right-corner-image\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}