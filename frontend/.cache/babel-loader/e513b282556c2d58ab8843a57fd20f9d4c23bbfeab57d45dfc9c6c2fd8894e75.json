{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STSC\\\\Downloads\\\\Agent-Backend-main (3)\\\\my-app\\\\src\\\\pages\\\\Base.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { AuthContext } from '../context/AuthContext';\nimport '../styles/Base.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Base() {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Check for token and redirect to authenticated view if on home page\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    const justLoggedIn = sessionStorage.getItem('justLoggedIn');\n    const isAuthenticated = !!token || !!storedUser;\n    const isHomePage = location.pathname === '/';\n    console.log('Base: Auth check - Token:', !!token, 'User:', !!storedUser, 'Just logged in:', !!justLoggedIn);\n    if (justLoggedIn && isHomePage) {\n      console.log('User just logged in, clearing flag');\n      sessionStorage.removeItem('justLoggedIn');\n      // Force a refresh to ensure authenticated content\n      window.location.reload();\n    }\n  }, [location.pathname, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content-container\",\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Base, \"raqXCIZPE6esRwBl5mZafH6Nfr0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Base;\nexport default Base;\nvar _c;\n$RefreshReg$(_c, \"Base\");","map":{"version":3,"names":["React","useContext","useEffect","Outlet","useLocation","useNavigate","Navbar","Footer","AuthContext","jsxDEV","_jsxDEV","Base","_s","isAuthenticated","location","navigate","token","localStorage","getItem","storedUser","justLoggedIn","sessionStorage","isHomePage","pathname","console","log","removeItem","window","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/pages/Base.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../styles/Base.css';\r\n\r\nfunction Base() {\r\n  const { isAuthenticated } = useContext(AuthContext);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  \r\n  // Check for token and redirect to authenticated view if on home page\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    const justLoggedIn = sessionStorage.getItem('justLoggedIn');\r\n    const isAuthenticated = !!token || !!storedUser;\r\n    const isHomePage = location.pathname === '/';\r\n    \r\n    console.log('Base: Auth check - Token:', !!token, 'User:', !!storedUser, 'Just logged in:', !!justLoggedIn);\r\n    \r\n    if (justLoggedIn && isHomePage) {\r\n      console.log('User just logged in, clearing flag');\r\n      sessionStorage.removeItem('justLoggedIn');\r\n      // Force a refresh to ensure authenticated content\r\n      window.location.reload();\r\n    }\r\n    \r\n  }, [location.pathname, navigate]);\r\n\r\n  return (\r\n    <div className=\"base-container\">\r\n      <Navbar />\r\n      <main className=\"content-container\">\r\n        <Outlet />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Base;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,MAAM,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACnE,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAgB,CAAC,GAAGZ,UAAU,CAACO,WAAW,CAAC;EACnD,MAAMM,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAME,YAAY,GAAGC,cAAc,CAACH,OAAO,CAAC,cAAc,CAAC;IAC3D,MAAML,eAAe,GAAG,CAAC,CAACG,KAAK,IAAI,CAAC,CAACG,UAAU;IAC/C,MAAMG,UAAU,GAAGR,QAAQ,CAACS,QAAQ,KAAK,GAAG;IAE5CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,CAAC,CAACT,KAAK,EAAE,OAAO,EAAE,CAAC,CAACG,UAAU,EAAE,iBAAiB,EAAE,CAAC,CAACC,YAAY,CAAC;IAE3G,IAAIA,YAAY,IAAIE,UAAU,EAAE;MAC9BE,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDJ,cAAc,CAACK,UAAU,CAAC,cAAc,CAAC;MACzC;MACAC,MAAM,CAACb,QAAQ,CAACc,MAAM,CAAC,CAAC;IAC1B;EAEF,CAAC,EAAE,CAACd,QAAQ,CAACS,QAAQ,EAAER,QAAQ,CAAC,CAAC;EAEjC,oBACEL,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpB,OAAA,CAACJ,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA;MAAMmB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eACjCpB,OAAA,CAACP,MAAM;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACPxB,OAAA,CAACH,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACtB,EAAA,CAjCQD,IAAI;EAAA,QAEMP,WAAW,EACXC,WAAW;AAAA;AAAA8B,EAAA,GAHrBxB,IAAI;AAmCb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}