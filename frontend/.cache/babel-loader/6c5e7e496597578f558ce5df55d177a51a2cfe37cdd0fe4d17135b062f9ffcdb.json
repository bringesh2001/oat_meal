{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STSC\\\\Downloads\\\\Agent-Backend-main (3)\\\\my-app\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { getChatHistory, sendChatMessage, getUserProfile, checkApiEndpoints, testEndpoint } from '../services/api';\nimport '../styles/Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('checking'); // 'checking', 'online', 'offline'\n  const [retryCount, setRetryCount] = useState(0);\n  const [userProfile, setUserProfile] = useState(null);\n  const [diagnosticMode, setDiagnosticMode] = useState(false);\n  const [diagnosticResults, setDiagnosticResults] = useState(null);\n  const [authError, setAuthError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const [diagnosticsRunning, setDiagnosticsRunning] = useState(false);\n  const [diagnosticsResults, setDiagnosticsResults] = useState(null);\n  const [showAuthError, setShowAuthError] = useState(false);\n  const [authErrorMessage, setAuthErrorMessage] = useState('');\n\n  // Handle user logout on authentication errors\n  const handleLogout = () => {\n    console.log('Logging out due to authentication error...');\n    console.log('Previous token debug info:', getTokenDebugInfo());\n\n    // Clear all auth and user data\n    localStorage.removeItem('token');\n    console.log('Cleared token from localStorage');\n\n    // Clear all session storage\n    sessionStorage.removeItem('lastLoginEmail');\n    sessionStorage.removeItem('userName');\n    sessionStorage.removeItem('userId');\n    console.log('Cleared user data from sessionStorage');\n\n    // Clear any user data in state\n    setUserProfile(null);\n    setIsAuthenticated(false);\n    setAuthError(null);\n    console.log('Reset user state');\n    console.log('All user data cleared, redirecting to login');\n\n    // Redirect to login page after a brief delay\n    setTimeout(() => {\n      navigate('/login');\n    }, 3000);\n  };\n\n  // Check authentication first\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n\n      // Check if token appears to be JWT format (starts with eyJ)\n      const isJWT = token.startsWith('eyJ');\n      console.log('Token appears to be JWT format:', isJWT);\n\n      // Try to get user profile\n      getUserProfile().then(profile => {\n        console.log('Loaded user profile:', profile);\n        setUserProfile(profile);\n\n        // Store user name in session storage with improved fallbacks\n        if (profile.name) {\n          sessionStorage.setItem('userName', profile.name);\n        } else if (profile.username) {\n          sessionStorage.setItem('userName', profile.username);\n        } else if (profile.email) {\n          // Extract username from email for better display\n          const username = profile.email.split('@')[0];\n          // Capitalize first letter for better presentation\n          const displayName = username.charAt(0).toUpperCase() + username.slice(1);\n          sessionStorage.setItem('userName', displayName);\n        }\n\n        // Update email info if available\n        if (profile.email) {\n          sessionStorage.setItem('lastLoginEmail', profile.email);\n        }\n        setAuthError(null); // Clear any auth errors\n\n        // Check connection to backend after profile is loaded\n        testBackendConnection();\n      }).catch(err => {\n        console.error('Failed to load profile:', err);\n\n        // Check if this is an authentication error or just a missing endpoint\n        const isAuthError = err.message === 'Authentication required' || err.message === 'Session expired. Please log in again.' || err.message === 'Authentication failed. Please log in again.' || err.response && (err.response.status === 401 || err.response.status === 403);\n        if (isAuthError) {\n          // Only logout if it's a true authentication error\n          setAuthError(err.message || 'Authentication error');\n          // Delay logout to allow error to be displayed\n          setTimeout(() => handleLogout(), 3000);\n        } else {\n          // For 404 errors or network issues, use fallback data and continue\n          console.log('Using fallback profile data due to endpoint not found (404)');\n          const email = sessionStorage.getItem('lastLoginEmail');\n          const name = sessionStorage.getItem('userName');\n          if (email || name) {\n            setUserProfile({\n              email: email || '',\n              name: name || 'User',\n              profile_picture: null\n            });\n\n            // Check connection to backend even when using fallback profile\n            testBackendConnection();\n          } else {\n            // If we have no fallback data at all, logout as a last resort\n            setAuthError('No profile data available. Please login again.');\n            setTimeout(() => handleLogout(), 3000);\n          }\n        }\n      });\n    } else {\n      setIsAuthenticated(false);\n    }\n    setLoading(false);\n  }, []);\n\n  // Add a function to debug token\n  const getTokenDebugInfo = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return 'No token found';\n    return `Token length: ${token.length}, format: ${token.startsWith('eyJ') ? 'JWT' : 'Simple token'}`;\n  };\n\n  // Test connectivity to backend\n  const testBackendConnection = async () => {\n    console.log('Testing backend connection...');\n    console.log('Token debug info:', getTokenDebugInfo());\n    try {\n      const result = await sendChatMessage('__test_connection__');\n      if (!result.success) {\n        if (result.authError) {\n          console.log('Authentication error during connection test:', result.message);\n          setConnectionStatus('auth_error');\n          setShowAuthError(true);\n          setAuthErrorMessage(result.message || 'Authentication failed');\n\n          // Delay logout to show error message\n          setTimeout(() => {\n            handleLogout();\n          }, 5000); // 5 seconds delay to allow user to see diagnostics\n          return;\n        }\n        if (result.serverRunning) {\n          // Server is running but API endpoint not found (404)\n          console.log('Server running but API endpoint not found');\n          setConnectionStatus('offline');\n          setConnected(false);\n          // Don't trigger auth error for 404s\n          return;\n        }\n        console.log('Connection test failed:', result.error);\n        setConnectionStatus('offline');\n        setConnected(false);\n      } else {\n        console.log('Connection test successful');\n        setConnectionStatus('online');\n        setConnected(true);\n      }\n    } catch (error) {\n      console.error('Error testing connection:', error);\n      setConnectionStatus('offline');\n      setConnected(false);\n    }\n  };\n\n  // Function to run API diagnostics\n  const runApiDiagnostics = async () => {\n    setDiagnosticsRunning(true);\n    setDiagnosticsResults(null);\n    try {\n      const endpoints = [{\n        name: 'Root endpoint',\n        path: '/'\n      }, {\n        name: 'Admin panel',\n        path: '/admin/'\n      }, {\n        name: 'API root',\n        path: '/api/'\n      }, {\n        name: 'API V1 root',\n        path: '/apiV1/'\n      }, {\n        name: 'Chat endpoint (API)',\n        path: '/api/chat/'\n      }, {\n        name: 'Chat endpoint (API V1)',\n        path: '/apiV1/chat/'\n      }, {\n        name: 'Ping endpoint (API)',\n        path: '/api/ping/'\n      }, {\n        name: 'Ping endpoint (API V1)',\n        path: '/apiV1/ping/'\n      }, {\n        name: 'Health check',\n        path: '/api/health/'\n      }, {\n        name: 'User profile (API)',\n        path: '/api/user/profile/'\n      }, {\n        name: 'User endpoint (API)',\n        path: '/api/user/'\n      }, {\n        name: 'Profile endpoint (API)',\n        path: '/api/profile/'\n      }, {\n        name: 'Me endpoint (API)',\n        path: '/api/me/'\n      }];\n      const results = [];\n      for (const endpoint of endpoints) {\n        try {\n          const response = await testEndpoint(endpoint.path);\n          results.push({\n            ...endpoint,\n            status: response.status,\n            success: response.status >= 200 && response.status < 300,\n            authError: response.status === 401 || response.status === 403,\n            notFound: response.status === 404,\n            message: response.message || `Status: ${response.status}`,\n            data: response.data\n          });\n        } catch (error) {\n          var _error$response;\n          results.push({\n            ...endpoint,\n            status: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) || 'Error',\n            success: false,\n            error: error.message,\n            message: `Error: ${error.message}`\n          });\n        }\n      }\n      setDiagnosticsResults(results);\n      console.log('API Diagnostics Results:', results);\n    } catch (error) {\n      console.error('Error running API diagnostics:', error);\n      setDiagnosticsResults([{\n        name: 'Diagnostics',\n        status: 'Error',\n        success: false,\n        error: error.message,\n        message: `Failed to run diagnostics: ${error.message}`\n      }]);\n    } finally {\n      setDiagnosticsRunning(false);\n    }\n  };\n\n  // Fetch messages when component mounts\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    const fetchMessages = async () => {\n      try {\n        setLoading(true);\n        const data = await getChatHistory();\n        if (Array.isArray(data) && data.length > 0) {\n          setMessages(data);\n          // If we got history, we're online\n          setConnectionStatus('online');\n        } else if (messages.length === 0) {\n          // Add a welcome message if we don't have any messages\n          setMessages([{\n            id: Date.now(),\n            content: \"Hello! I'm the AI Assistant powered by Azure OpenAI. How can I help you today?\",\n            sender: 'Azure AI',\n            timestamp: new Date().toISOString(),\n            isCurrentUser: false\n          }]);\n\n          // Try to connect to backend to set proper status\n          await testBackendConnection();\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch messages:\", error);\n\n        // If we've tried less than 3 times, attempt to test connectivity again\n        if (retryCount < 3) {\n          setRetryCount(prevCount => prevCount + 1);\n          await testBackendConnection();\n        } else {\n          setConnectionStatus('offline');\n        }\n\n        // If no messages are present, add a welcome message\n        if (messages.length === 0) {\n          setMessages([{\n            id: Date.now(),\n            content: \"Hello! I'm the AI Assistant powered by Azure OpenAI. I might be operating in offline mode, but I'll do my best to assist you.\",\n            sender: 'Azure AI',\n            timestamp: new Date().toISOString(),\n            isCurrentUser: false\n          }]);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMessages();\n\n    // We'll also explicitly test the connection\n    const checkConnection = async () => {\n      await testBackendConnection();\n    };\n\n    // Check connection every 30 seconds\n    const intervalId = setInterval(checkConnection, 30000);\n\n    // Initial connection check\n    checkConnection();\n    return () => clearInterval(intervalId);\n  }, [isAuthenticated, retryCount]);\n\n  // Scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Send a message to the AI\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      id: Date.now(),\n      content: inputMessage,\n      sender: (userProfile === null || userProfile === void 0 ? void 0 : userProfile.name) || sessionStorage.getItem('userName') || 'You',\n      timestamp: new Date().toISOString(),\n      isCurrentUser: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInputMessage('');\n    setIsProcessing(true);\n\n    // Add temporary \"thinking\" message\n    const thinkingId = Date.now() + 1;\n    setMessages(prevMessages => [...prevMessages, {\n      id: thinkingId,\n      content: '...',\n      sender: 'Azure AI',\n      timestamp: new Date().toISOString(),\n      isCurrentUser: false,\n      isThinking: true\n    }]);\n    try {\n      // Send to backend\n      const response = await sendChatMessage(inputMessage);\n\n      // Remove temporary thinking message\n      setMessages(prevMessages => prevMessages.filter(msg => msg.id !== thinkingId));\n      if (response.success) {\n        // Add AI response to chat\n        const aiMessage = {\n          id: Date.now() + 2,\n          content: response.ai_response,\n          sender: 'Azure AI',\n          timestamp: new Date().toISOString(),\n          isCurrentUser: false,\n          sources: response.sources\n        };\n        setMessages(prevMessages => [...prevMessages, aiMessage]);\n        setConnectionStatus('online');\n      } else if (response.authError) {\n        // Handle authentication errors\n        setAuthError(`Authentication error: ${response.message}`);\n        setTimeout(() => handleLogout(), 3000);\n      } else {\n        // Handle other errors\n        const errorMessage = {\n          id: Date.now() + 2,\n          content: \"I'm having trouble connecting to the server. Please try again later.\",\n          sender: 'Azure AI',\n          timestamp: new Date().toISOString(),\n          isCurrentUser: false\n        };\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\n        setConnectionStatus('offline');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Remove temporary thinking message\n      setMessages(prevMessages => prevMessages.filter(msg => msg.id !== thinkingId));\n\n      // Add error message\n      const errorMessage = {\n        id: Date.now() + 2,\n        content: \"An error occurred while processing your request. Please try again.\",\n        sender: 'Azure AI',\n        timestamp: new Date().toISOString(),\n        isCurrentUser: false\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n      setConnectionStatus('offline');\n\n      // Handle auth errors\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n        var _error$response$data;\n        setAuthError('Authentication error: ' + (((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Invalid token'));\n        setTimeout(() => handleLogout(), 3000);\n      }\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Check JWT token format and validity\n  const checkJwtToken = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found in localStorage');\n      return {\n        present: false,\n        message: 'No authentication token found'\n      };\n    }\n    console.log('Token found, length:', token.length);\n\n    // Check if it looks like a JWT (starts with eyJ which is 'ey' in base64)\n    const isJwt = token.startsWith('eyJ');\n    console.log('Token appears to be JWT:', isJwt);\n    if (isJwt) {\n      // Try to decode the JWT to verify format (not signature)\n      try {\n        // JWT has 3 parts separated by dots\n        const parts = token.split('.');\n        if (parts.length !== 3) {\n          console.error('JWT format invalid: wrong number of segments');\n          return {\n            present: true,\n            valid: false,\n            format: 'JWT',\n            message: 'JWT format invalid: wrong number of segments'\n          };\n        }\n\n        // Try to decode the header and payload\n        const header = JSON.parse(atob(parts[0]));\n        const payload = JSON.parse(atob(parts[1]));\n        console.log('JWT header:', header);\n        console.log('JWT payload:', payload);\n\n        // Check for expiration\n        if (payload.exp) {\n          const expiryDate = new Date(payload.exp * 1000);\n          const now = new Date();\n          const isExpired = expiryDate < now;\n          console.log('JWT expiry date:', expiryDate.toISOString());\n          console.log('JWT is expired:', isExpired);\n          if (isExpired) {\n            return {\n              present: true,\n              valid: false,\n              format: 'JWT',\n              expired: true,\n              message: `JWT token expired at ${expiryDate.toLocaleString()}`\n            };\n          }\n        }\n        return {\n          present: true,\n          valid: true,\n          format: 'JWT',\n          algorithm: header.alg,\n          type: header.typ,\n          message: 'JWT token appears to be valid'\n        };\n      } catch (error) {\n        console.error('Error decoding JWT:', error);\n        return {\n          present: true,\n          valid: false,\n          format: 'JWT',\n          message: `Error decoding JWT: ${error.message}`\n        };\n      }\n    } else {\n      // Handle non-JWT token\n      return {\n        present: true,\n        format: 'non-JWT',\n        message: 'Token is not in JWT format'\n      };\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading chat...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Get display name - first from profile, then session, then fallback\n  const displayName = userProfile && (userProfile.name || userProfile.username) || sessionStorage.getItem('userName') || sessionStorage.getItem('lastLoginEmail') || 'User';\n  const firstName = displayName.split(' ')[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat with Azure AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: connectionStatus === 'online' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-online\",\n          children: \"\\u25CF Azure Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this) : connectionStatus === 'offline' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"offline-notice\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-offline\",\n            children: \"\\u25CF Azure Offline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retry-button\",\n            onClick: testBackendConnection,\n            disabled: connectionStatus === 'checking',\n            children: connectionStatus === 'checking' ? 'Checking...' : 'Retry Connection'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-checking\",\n          children: \"\\u25CF Checking Connection...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this), showAuthError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-error-notice\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Authentication Error: \", authErrorMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Check that your Django server is properly configured to accept the token format being sent.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"token-info\",\n        children: getTokenDebugInfo()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"diagnostic-button\",\n          onClick: () => {\n            const jwtInfo = checkJwtToken();\n            console.log('JWT Diagnostic Results:', jwtInfo);\n            setAuthErrorMessage(jwtInfo.message || 'Authentication failed');\n            // Show JWT diagnostic details\n            const detailsElement = document.createElement('div');\n            detailsElement.className = 'jwt-details';\n            detailsElement.innerHTML = `\n                  <h4>JWT Token Diagnostic:</h4>\n                  <pre>${JSON.stringify(jwtInfo, null, 2)}</pre>\n                `;\n            // Find the auth error notice and append or replace details\n            const errorNotice = document.querySelector('.auth-error-notice');\n            const existingDetails = errorNotice.querySelector('.jwt-details');\n            if (existingDetails) {\n              errorNotice.replaceChild(detailsElement, existingDetails);\n            } else {\n              errorNotice.appendChild(detailsElement);\n            }\n          },\n          children: \"Check JWT Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"diagnostic-button\",\n          onClick: () => {\n            // Try sending the token without any prefix\n            localStorage.setItem('tokenSendFormat', 'direct');\n            testBackendConnection();\n          },\n          children: \"Try Direct Token Format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You will be redirected to login in a moment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hello \", firstName, \", welcome to the AI Assistant!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hint\",\n          children: \"Try asking: \\\"What can this application do for me?\\\" or \\\"Tell me about this project\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.isCurrentUser ? 'message-mine' : 'message-other'} ${msg.isThinking ? 'thinking' : ''} ${msg.isDiagnostic ? 'diagnostic' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-sender\",\n          children: msg.isCurrentUser ? (userProfile === null || userProfile === void 0 ? void 0 : userProfile.name) || sessionStorage.getItem('userName') || displayName : msg.sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [msg.isThinking ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thinking-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Thinking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot\",\n              children: \".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot\",\n              children: \".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot\",\n              children: \".\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 19\n          }, this) : msg.content, msg.sources && msg.sources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-sources\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sources-title\",\n              children: \"Sources:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: msg.sources.map((source, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [source.title || source.url || source.path || \"Reference document\", source.url && /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: source.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: \" (link)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 42\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 15\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        placeholder: \"Ask me anything...\",\n        className: \"message-input\",\n        disabled: isProcessing || connectionStatus === 'offline' || authError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `send-button ${isProcessing ? 'disabled' : ''}`,\n        disabled: isProcessing || !inputMessage.trim() || connectionStatus === 'offline' || authError,\n        children: isProcessing ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 7\n    }, this), connectionStatus === 'offline' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offline-notice\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Disconnected from Azure OpenAI Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Possible reasons:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"offline-reasons\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The RAG pipeline API endpoint is not available on the server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The Django server might not have the expected chat endpoint configured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Your authentication token might not have permission to access the RAG service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offline-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: testBackendConnection,\n          disabled: isProcessing,\n          className: \"btn-secondary\",\n          children: \"Retry Azure Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: runApiDiagnostics,\n          disabled: diagnosticsRunning,\n          className: \"btn-primary\",\n          children: \"Run API Diagnostics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this), diagnosticsRunning && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Running API diagnostics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 34\n      }, this), diagnosticsResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diagnostics-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"API Diagnostics Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Endpoint\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Path\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Result\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: diagnosticsResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: result.success ? 'success' : result.notFound ? 'warning' : 'error',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: result.path\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: result.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: result.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"troubleshooting-tips\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Troubleshooting Tips:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Ensure your Django backend is running at http://127.0.0.1:8000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check your Azure OpenAI service and API key configuration in Django settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Look for detailed error messages in your browser console\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Verify that your Azure API keys are valid and have the necessary permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check that your Django backend has the expected API routes configured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 527,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"/70I11I1XISlkabrd3Jwfu1IkXY=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navigate","useNavigate","getChatHistory","sendChatMessage","getUserProfile","checkApiEndpoints","testEndpoint","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","inputMessage","setInputMessage","loading","setLoading","isAuthenticated","setIsAuthenticated","isProcessing","setIsProcessing","connectionStatus","setConnectionStatus","retryCount","setRetryCount","userProfile","setUserProfile","diagnosticMode","setDiagnosticMode","diagnosticResults","setDiagnosticResults","authError","setAuthError","messagesEndRef","navigate","diagnosticsRunning","setDiagnosticsRunning","diagnosticsResults","setDiagnosticsResults","showAuthError","setShowAuthError","authErrorMessage","setAuthErrorMessage","handleLogout","console","log","getTokenDebugInfo","localStorage","removeItem","sessionStorage","setTimeout","token","getItem","isJWT","startsWith","then","profile","name","setItem","username","email","split","displayName","charAt","toUpperCase","slice","testBackendConnection","catch","err","error","isAuthError","message","response","status","profile_picture","length","result","success","serverRunning","setConnected","runApiDiagnostics","endpoints","path","results","endpoint","push","notFound","data","_error$response","fetchMessages","Array","isArray","id","Date","now","content","sender","timestamp","toISOString","isCurrentUser","prevCount","checkConnection","intervalId","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","prevMessages","thinkingId","isThinking","filter","msg","aiMessage","ai_response","sources","errorMessage","_error$response$data","detail","checkJwtToken","present","isJwt","parts","valid","format","header","JSON","parse","atob","payload","exp","expiryDate","isExpired","expired","toLocaleString","algorithm","alg","type","typ","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","firstName","onClick","disabled","jwtInfo","detailsElement","document","createElement","innerHTML","stringify","errorNotice","querySelector","existingDetails","replaceChild","appendChild","map","isDiagnostic","source","index","title","url","href","target","rel","toLocaleTimeString","ref","onSubmit","value","onChange","e","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nimport { getChatHistory, sendChatMessage, getUserProfile, checkApiEndpoints, testEndpoint } from '../services/api';\r\nimport '../styles/Chat.css';\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('checking'); // 'checking', 'online', 'offline'\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [diagnosticMode, setDiagnosticMode] = useState(false);\r\n  const [diagnosticResults, setDiagnosticResults] = useState(null);\r\n  const [authError, setAuthError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [diagnosticsRunning, setDiagnosticsRunning] = useState(false);\r\n  const [diagnosticsResults, setDiagnosticsResults] = useState(null);\r\n  const [showAuthError, setShowAuthError] = useState(false);\r\n  const [authErrorMessage, setAuthErrorMessage] = useState('');\r\n  \r\n  // Handle user logout on authentication errors\r\n  const handleLogout = () => {\r\n    console.log('Logging out due to authentication error...');\r\n    console.log('Previous token debug info:', getTokenDebugInfo());\r\n    \r\n    // Clear all auth and user data\r\n    localStorage.removeItem('token');\r\n    console.log('Cleared token from localStorage');\r\n    \r\n    // Clear all session storage\r\n    sessionStorage.removeItem('lastLoginEmail');\r\n    sessionStorage.removeItem('userName');\r\n    sessionStorage.removeItem('userId');\r\n    console.log('Cleared user data from sessionStorage');\r\n    \r\n    // Clear any user data in state\r\n    setUserProfile(null);\r\n    setIsAuthenticated(false);\r\n    setAuthError(null);\r\n    console.log('Reset user state');\r\n    \r\n    console.log('All user data cleared, redirecting to login');\r\n    \r\n    // Redirect to login page after a brief delay\r\n    setTimeout(() => {\r\n      navigate('/login');\r\n    }, 3000);\r\n  };\r\n  \r\n  // Check authentication first\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      \r\n      // Check if token appears to be JWT format (starts with eyJ)\r\n      const isJWT = token.startsWith('eyJ');\r\n      console.log('Token appears to be JWT format:', isJWT);\r\n      \r\n      // Try to get user profile\r\n      getUserProfile()\r\n        .then(profile => {\r\n          console.log('Loaded user profile:', profile);\r\n          setUserProfile(profile);\r\n          \r\n          // Store user name in session storage with improved fallbacks\r\n          if (profile.name) {\r\n            sessionStorage.setItem('userName', profile.name);\r\n          } else if (profile.username) {\r\n            sessionStorage.setItem('userName', profile.username);\r\n          } else if (profile.email) {\r\n            // Extract username from email for better display\r\n            const username = profile.email.split('@')[0];\r\n            // Capitalize first letter for better presentation\r\n            const displayName = username.charAt(0).toUpperCase() + username.slice(1);\r\n            sessionStorage.setItem('userName', displayName);\r\n          }\r\n          \r\n          // Update email info if available\r\n          if (profile.email) {\r\n            sessionStorage.setItem('lastLoginEmail', profile.email);\r\n          }\r\n          \r\n          setAuthError(null); // Clear any auth errors\r\n          \r\n          // Check connection to backend after profile is loaded\r\n          testBackendConnection();\r\n        })\r\n        .catch(err => {\r\n          console.error('Failed to load profile:', err);\r\n          \r\n          // Check if this is an authentication error or just a missing endpoint\r\n          const isAuthError = err.message === 'Authentication required' || \r\n                              err.message === 'Session expired. Please log in again.' ||\r\n                              err.message === 'Authentication failed. Please log in again.' ||\r\n                              (err.response && (err.response.status === 401 || err.response.status === 403));\r\n          \r\n          if (isAuthError) {\r\n            // Only logout if it's a true authentication error\r\n            setAuthError(err.message || 'Authentication error');\r\n            // Delay logout to allow error to be displayed\r\n            setTimeout(() => handleLogout(), 3000);\r\n          } else {\r\n            // For 404 errors or network issues, use fallback data and continue\r\n            console.log('Using fallback profile data due to endpoint not found (404)');\r\n            const email = sessionStorage.getItem('lastLoginEmail');\r\n            const name = sessionStorage.getItem('userName');\r\n            \r\n            if (email || name) {\r\n              setUserProfile({\r\n                email: email || '',\r\n                name: name || 'User',\r\n                profile_picture: null\r\n              });\r\n              \r\n              // Check connection to backend even when using fallback profile\r\n              testBackendConnection();\r\n            } else {\r\n              // If we have no fallback data at all, logout as a last resort\r\n              setAuthError('No profile data available. Please login again.');\r\n              setTimeout(() => handleLogout(), 3000);\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      setIsAuthenticated(false);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n  \r\n  // Add a function to debug token\r\n  const getTokenDebugInfo = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return 'No token found';\r\n    \r\n    return `Token length: ${token.length}, format: ${token.startsWith('eyJ') ? 'JWT' : 'Simple token'}`;\r\n  };\r\n  \r\n  // Test connectivity to backend\r\n  const testBackendConnection = async () => {\r\n    console.log('Testing backend connection...');\r\n    console.log('Token debug info:', getTokenDebugInfo());\r\n    \r\n    try {\r\n      const result = await sendChatMessage('__test_connection__');\r\n      \r\n      if (!result.success) {\r\n        if (result.authError) {\r\n          console.log('Authentication error during connection test:', result.message);\r\n          setConnectionStatus('auth_error');\r\n          setShowAuthError(true);\r\n          setAuthErrorMessage(result.message || 'Authentication failed');\r\n          \r\n          // Delay logout to show error message\r\n          setTimeout(() => {\r\n            handleLogout();\r\n          }, 5000); // 5 seconds delay to allow user to see diagnostics\r\n          return;\r\n        }\r\n        \r\n        if (result.serverRunning) {\r\n          // Server is running but API endpoint not found (404)\r\n          console.log('Server running but API endpoint not found');\r\n          setConnectionStatus('offline');\r\n          setConnected(false);\r\n          // Don't trigger auth error for 404s\r\n          return;\r\n        }\r\n        \r\n        console.log('Connection test failed:', result.error);\r\n        setConnectionStatus('offline');\r\n        setConnected(false);\r\n      } else {\r\n        console.log('Connection test successful');\r\n        setConnectionStatus('online');\r\n        setConnected(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error testing connection:', error);\r\n      setConnectionStatus('offline');\r\n      setConnected(false);\r\n    }\r\n  };\r\n\r\n  // Function to run API diagnostics\r\n  const runApiDiagnostics = async () => {\r\n    setDiagnosticsRunning(true);\r\n    setDiagnosticsResults(null);\r\n    \r\n    try {\r\n      const endpoints = [\r\n        { name: 'Root endpoint', path: '/' },\r\n        { name: 'Admin panel', path: '/admin/' },\r\n        { name: 'API root', path: '/api/' },\r\n        { name: 'API V1 root', path: '/apiV1/' },\r\n        { name: 'Chat endpoint (API)', path: '/api/chat/' },\r\n        { name: 'Chat endpoint (API V1)', path: '/apiV1/chat/' },\r\n        { name: 'Ping endpoint (API)', path: '/api/ping/' },\r\n        { name: 'Ping endpoint (API V1)', path: '/apiV1/ping/' },\r\n        { name: 'Health check', path: '/api/health/' },\r\n        { name: 'User profile (API)', path: '/api/user/profile/' },\r\n        { name: 'User endpoint (API)', path: '/api/user/' },\r\n        { name: 'Profile endpoint (API)', path: '/api/profile/' },\r\n        { name: 'Me endpoint (API)', path: '/api/me/' }\r\n      ];\r\n      \r\n      const results = [];\r\n      \r\n      for (const endpoint of endpoints) {\r\n        try {\r\n          const response = await testEndpoint(endpoint.path);\r\n          results.push({\r\n            ...endpoint,\r\n            status: response.status,\r\n            success: response.status >= 200 && response.status < 300,\r\n            authError: response.status === 401 || response.status === 403,\r\n            notFound: response.status === 404,\r\n            message: response.message || `Status: ${response.status}`,\r\n            data: response.data\r\n          });\r\n        } catch (error) {\r\n          results.push({\r\n            ...endpoint,\r\n            status: error.response?.status || 'Error',\r\n            success: false,\r\n            error: error.message,\r\n            message: `Error: ${error.message}`\r\n          });\r\n        }\r\n      }\r\n      \r\n      setDiagnosticsResults(results);\r\n      console.log('API Diagnostics Results:', results);\r\n    } catch (error) {\r\n      console.error('Error running API diagnostics:', error);\r\n      setDiagnosticsResults([{\r\n        name: 'Diagnostics',\r\n        status: 'Error',\r\n        success: false,\r\n        error: error.message,\r\n        message: `Failed to run diagnostics: ${error.message}`\r\n      }]);\r\n    } finally {\r\n      setDiagnosticsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Fetch messages when component mounts\r\n  useEffect(() => {\r\n    if (!isAuthenticated) return;\r\n\r\n    const fetchMessages = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getChatHistory();\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          setMessages(data);\r\n          // If we got history, we're online\r\n          setConnectionStatus('online');\r\n        } else if (messages.length === 0) {\r\n          // Add a welcome message if we don't have any messages\r\n          setMessages([{\r\n            id: Date.now(),\r\n            content: \"Hello! I'm the AI Assistant powered by Azure OpenAI. How can I help you today?\",\r\n            sender: 'Azure AI',\r\n            timestamp: new Date().toISOString(),\r\n            isCurrentUser: false\r\n          }]);\r\n          \r\n          // Try to connect to backend to set proper status\r\n          await testBackendConnection();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch messages:\", error);\r\n        \r\n        // If we've tried less than 3 times, attempt to test connectivity again\r\n        if (retryCount < 3) {\r\n          setRetryCount(prevCount => prevCount + 1);\r\n          await testBackendConnection();\r\n        } else {\r\n          setConnectionStatus('offline');\r\n        }\r\n        \r\n        // If no messages are present, add a welcome message\r\n        if (messages.length === 0) {\r\n          setMessages([{\r\n            id: Date.now(),\r\n            content: \"Hello! I'm the AI Assistant powered by Azure OpenAI. I might be operating in offline mode, but I'll do my best to assist you.\",\r\n            sender: 'Azure AI',\r\n            timestamp: new Date().toISOString(),\r\n            isCurrentUser: false\r\n          }]);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchMessages();\r\n    \r\n    // We'll also explicitly test the connection\r\n    const checkConnection = async () => {\r\n      await testBackendConnection();\r\n    };\r\n    \r\n    // Check connection every 30 seconds\r\n    const intervalId = setInterval(checkConnection, 30000); \r\n    \r\n    // Initial connection check\r\n    checkConnection();\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, [isAuthenticated, retryCount]);\r\n  \r\n  // Scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  // Send a message to the AI\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim()) return;\r\n    \r\n    // Add user message to chat\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      content: inputMessage,\r\n      sender: userProfile?.name || sessionStorage.getItem('userName') || 'You',\r\n      timestamp: new Date().toISOString(),\r\n      isCurrentUser: true\r\n    };\r\n    \r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setInputMessage('');\r\n    setIsProcessing(true);\r\n    \r\n    // Add temporary \"thinking\" message\r\n    const thinkingId = Date.now() + 1;\r\n    setMessages(prevMessages => [\r\n      ...prevMessages, \r\n      {\r\n        id: thinkingId,\r\n        content: '...',\r\n        sender: 'Azure AI',\r\n        timestamp: new Date().toISOString(),\r\n        isCurrentUser: false,\r\n        isThinking: true\r\n      }\r\n    ]);\r\n    \r\n    try {\r\n      // Send to backend\r\n      const response = await sendChatMessage(inputMessage);\r\n      \r\n      // Remove temporary thinking message\r\n      setMessages(prevMessages => \r\n        prevMessages.filter(msg => msg.id !== thinkingId)\r\n      );\r\n      \r\n      if (response.success) {\r\n        // Add AI response to chat\r\n        const aiMessage = {\r\n          id: Date.now() + 2,\r\n          content: response.ai_response,\r\n          sender: 'Azure AI',\r\n          timestamp: new Date().toISOString(),\r\n          isCurrentUser: false,\r\n          sources: response.sources\r\n        };\r\n        setMessages(prevMessages => [...prevMessages, aiMessage]);\r\n        setConnectionStatus('online');\r\n      } else if (response.authError) {\r\n        // Handle authentication errors\r\n        setAuthError(`Authentication error: ${response.message}`);\r\n        setTimeout(() => handleLogout(), 3000);\r\n      } else {\r\n        // Handle other errors\r\n        const errorMessage = {\r\n          id: Date.now() + 2,\r\n          content: \"I'm having trouble connecting to the server. Please try again later.\",\r\n          sender: 'Azure AI',\r\n          timestamp: new Date().toISOString(),\r\n          isCurrentUser: false\r\n        };\r\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n        setConnectionStatus('offline');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      \r\n      // Remove temporary thinking message\r\n      setMessages(prevMessages => \r\n        prevMessages.filter(msg => msg.id !== thinkingId)\r\n      );\r\n      \r\n      // Add error message\r\n      const errorMessage = {\r\n        id: Date.now() + 2,\r\n        content: \"An error occurred while processing your request. Please try again.\",\r\n        sender: 'Azure AI',\r\n        timestamp: new Date().toISOString(),\r\n        isCurrentUser: false\r\n      };\r\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n      setConnectionStatus('offline');\r\n      \r\n      // Handle auth errors\r\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n        setAuthError('Authentication error: ' + (error.response.data?.detail || 'Invalid token'));\r\n        setTimeout(() => handleLogout(), 3000);\r\n      }\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n  \r\n  // Check JWT token format and validity\r\n  const checkJwtToken = () => {\r\n    const token = localStorage.getItem('token');\r\n    \r\n    if (!token) {\r\n      console.error('No token found in localStorage');\r\n      return {\r\n        present: false,\r\n        message: 'No authentication token found'\r\n      };\r\n    }\r\n    \r\n    console.log('Token found, length:', token.length);\r\n    \r\n    // Check if it looks like a JWT (starts with eyJ which is 'ey' in base64)\r\n    const isJwt = token.startsWith('eyJ');\r\n    console.log('Token appears to be JWT:', isJwt);\r\n    \r\n    if (isJwt) {\r\n      // Try to decode the JWT to verify format (not signature)\r\n      try {\r\n        // JWT has 3 parts separated by dots\r\n        const parts = token.split('.');\r\n        if (parts.length !== 3) {\r\n          console.error('JWT format invalid: wrong number of segments');\r\n          return {\r\n            present: true,\r\n            valid: false,\r\n            format: 'JWT',\r\n            message: 'JWT format invalid: wrong number of segments'\r\n          };\r\n        }\r\n        \r\n        // Try to decode the header and payload\r\n        const header = JSON.parse(atob(parts[0]));\r\n        const payload = JSON.parse(atob(parts[1]));\r\n        \r\n        console.log('JWT header:', header);\r\n        console.log('JWT payload:', payload);\r\n        \r\n        // Check for expiration\r\n        if (payload.exp) {\r\n          const expiryDate = new Date(payload.exp * 1000);\r\n          const now = new Date();\r\n          const isExpired = expiryDate < now;\r\n          \r\n          console.log('JWT expiry date:', expiryDate.toISOString());\r\n          console.log('JWT is expired:', isExpired);\r\n          \r\n          if (isExpired) {\r\n            return {\r\n              present: true,\r\n              valid: false,\r\n              format: 'JWT',\r\n              expired: true,\r\n              message: `JWT token expired at ${expiryDate.toLocaleString()}`\r\n            };\r\n          }\r\n        }\r\n        \r\n        return {\r\n          present: true,\r\n          valid: true,\r\n          format: 'JWT',\r\n          algorithm: header.alg,\r\n          type: header.typ,\r\n          message: 'JWT token appears to be valid'\r\n        };\r\n      } catch (error) {\r\n        console.error('Error decoding JWT:', error);\r\n        return {\r\n          present: true,\r\n          valid: false,\r\n          format: 'JWT',\r\n          message: `Error decoding JWT: ${error.message}`\r\n        };\r\n      }\r\n    } else {\r\n      // Handle non-JWT token\r\n      return {\r\n        present: true,\r\n        format: 'non-JWT',\r\n        message: 'Token is not in JWT format'\r\n      };\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading-spinner\">Loading chat...</div>;\r\n  }\r\n\r\n  // Redirect to login if not authenticated\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  \r\n  // Get display name - first from profile, then session, then fallback\r\n  const displayName = \r\n    (userProfile && (userProfile.name || userProfile.username)) || \r\n    sessionStorage.getItem('userName') ||\r\n    sessionStorage.getItem('lastLoginEmail') || \r\n    'User';\r\n    \r\n  const firstName = displayName.split(' ')[0];\r\n  \r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <h2>Chat with Azure AI</h2>\r\n        <div className=\"connection-status\">\r\n          {connectionStatus === 'online' ? (\r\n            <span className=\"status-online\">● Azure Online</span>\r\n          ) : connectionStatus === 'offline' ? (\r\n            <div className=\"offline-notice\">\r\n              <span className=\"status-offline\">● Azure Offline</span>\r\n              <button \r\n                className=\"retry-button\" \r\n                onClick={testBackendConnection}\r\n                disabled={connectionStatus === 'checking'}\r\n              >\r\n                {connectionStatus === 'checking' ? 'Checking...' : 'Retry Connection'}\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <span className=\"status-checking\">● Checking Connection...</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {showAuthError && (\r\n        <div className=\"auth-error-notice\">\r\n          <div className=\"error-title\">\r\n            <h3>Authentication Error: {authErrorMessage}</h3>\r\n          </div>\r\n          <p>Check that your Django server is properly configured to accept the token format being sent.</p>\r\n          <p className=\"token-info\">\r\n            {getTokenDebugInfo()}\r\n          </p>\r\n          <p>\r\n            <button \r\n              className=\"diagnostic-button\" \r\n              onClick={() => {\r\n                const jwtInfo = checkJwtToken();\r\n                console.log('JWT Diagnostic Results:', jwtInfo);\r\n                setAuthErrorMessage(jwtInfo.message || 'Authentication failed');\r\n                // Show JWT diagnostic details\r\n                const detailsElement = document.createElement('div');\r\n                detailsElement.className = 'jwt-details';\r\n                detailsElement.innerHTML = `\r\n                  <h4>JWT Token Diagnostic:</h4>\r\n                  <pre>${JSON.stringify(jwtInfo, null, 2)}</pre>\r\n                `;\r\n                // Find the auth error notice and append or replace details\r\n                const errorNotice = document.querySelector('.auth-error-notice');\r\n                const existingDetails = errorNotice.querySelector('.jwt-details');\r\n                if (existingDetails) {\r\n                  errorNotice.replaceChild(detailsElement, existingDetails);\r\n                } else {\r\n                  errorNotice.appendChild(detailsElement);\r\n                }\r\n              }}\r\n            >\r\n              Check JWT Token\r\n            </button>\r\n            <button \r\n              className=\"diagnostic-button\" \r\n              onClick={() => {\r\n                // Try sending the token without any prefix\r\n                localStorage.setItem('tokenSendFormat', 'direct');\r\n                testBackendConnection();\r\n              }}\r\n            >\r\n              Try Direct Token Format\r\n            </button>\r\n          </p>\r\n          <p>You will be redirected to login in a moment...</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"no-messages\">\r\n            <p>Hello {firstName}, welcome to the AI Assistant!</p>\r\n            <p className=\"hint\">Try asking: \"What can this application do for me?\" or \"Tell me about this project\"</p>\r\n          </div>\r\n        ) : (\r\n          messages.map((msg) => (\r\n            <div \r\n              key={msg.id} \r\n              className={`message ${msg.isCurrentUser ? 'message-mine' : 'message-other'} ${msg.isThinking ? 'thinking' : ''} ${msg.isDiagnostic ? 'diagnostic' : ''}`}\r\n            >\r\n              <div className=\"message-sender\">\r\n                {msg.isCurrentUser \r\n                  ? (userProfile?.name || sessionStorage.getItem('userName') || displayName)\r\n                  : msg.sender}\r\n              </div>\r\n              <div className=\"message-content\">\r\n                {msg.isThinking ? (\r\n                  <div className=\"thinking-indicator\">\r\n                    <span>Thinking</span>\r\n                    <span className=\"dot\">.</span>\r\n                    <span className=\"dot\">.</span>\r\n                    <span className=\"dot\">.</span>\r\n                  </div>\r\n                ) : (\r\n                  msg.content\r\n                )}\r\n                {msg.sources && msg.sources.length > 0 && (\r\n                  <div className=\"message-sources\">\r\n                    <p className=\"sources-title\">Sources:</p>\r\n                    <ul>\r\n                      {msg.sources.map((source, index) => (\r\n                        <li key={index}>\r\n                          {source.title || source.url || source.path || \"Reference document\"}\r\n                          {source.url && <a href={source.url} target=\"_blank\" rel=\"noopener noreferrer\"> (link)</a>}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"message-time\">\r\n                {new Date(msg.timestamp).toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form onSubmit={handleSendMessage} className=\"message-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          placeholder=\"Ask me anything...\"\r\n          className=\"message-input\"\r\n          disabled={isProcessing || connectionStatus === 'offline' || authError}\r\n        />\r\n        <button \r\n          type=\"submit\" \r\n          className={`send-button ${isProcessing ? 'disabled' : ''}`}\r\n          disabled={isProcessing || !inputMessage.trim() || connectionStatus === 'offline' || authError}\r\n        >\r\n          {isProcessing ? 'Sending...' : 'Send'}\r\n        </button>\r\n      </form>\r\n      \r\n      {connectionStatus === 'offline' && (\r\n        <div className=\"offline-notice\">\r\n          <p><strong>Disconnected from Azure OpenAI Services</strong></p>\r\n          <p>Possible reasons:</p>\r\n          <ul className=\"offline-reasons\">\r\n            <li>The RAG pipeline API endpoint is not available on the server</li>\r\n            <li>The Django server might not have the expected chat endpoint configured</li>\r\n            <li>Your authentication token might not have permission to access the RAG service</li>\r\n          </ul>\r\n          \r\n          <div className=\"offline-actions\">\r\n            <button \r\n              onClick={testBackendConnection} \r\n              disabled={isProcessing}\r\n              className=\"btn-secondary\"\r\n            >\r\n              Retry Azure Connection\r\n            </button>\r\n            <button \r\n              onClick={runApiDiagnostics} \r\n              disabled={diagnosticsRunning}\r\n              className=\"btn-primary\"\r\n            >\r\n              Run API Diagnostics\r\n            </button>\r\n          </div>\r\n          \r\n          {diagnosticsRunning && <p>Running API diagnostics...</p>}\r\n          \r\n          {diagnosticsResults && (\r\n            <div className=\"diagnostics-results\">\r\n              <h4>API Diagnostics Results:</h4>\r\n              <div className=\"results-table\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Endpoint</th>\r\n                      <th>Path</th>\r\n                      <th>Status</th>\r\n                      <th>Result</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {diagnosticsResults.map((result, index) => (\r\n                      <tr key={index} className={result.success ? 'success' : result.notFound ? 'warning' : 'error'}>\r\n                        <td>{result.name}</td>\r\n                        <td>{result.path}</td>\r\n                        <td>{result.status}</td>\r\n                        <td>{result.message}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"troubleshooting-tips\">\r\n            <h4>Troubleshooting Tips:</h4>\r\n            <ol>\r\n              <li>Ensure your Django backend is running at http://127.0.0.1:8000</li>\r\n              <li>Check your Azure OpenAI service and API key configuration in Django settings</li>\r\n              <li>Look for detailed error messages in your browser console</li>\r\n              <li>Verify that your Azure API keys are valid and have the necessary permissions</li>\r\n              <li>Check that your Django backend has the expected API routes configured</li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}