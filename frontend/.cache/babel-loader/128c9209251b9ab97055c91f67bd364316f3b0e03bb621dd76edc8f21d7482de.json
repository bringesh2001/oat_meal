{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://your-backend-url/api'; // Replace with your actual backend URL\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Authentication services\nexport const loginUser = async (email, password) => {\n  const response = await api.post('/auth/login', {\n    email,\n    password\n  });\n  return response.data;\n};\nexport const registerUser = async userData => {\n  const response = await api.post('/auth/register', userData);\n  return response.data;\n};\n\n// Chat services\nexport const getMessages = async chatId => {\n  const response = await api.get(`/chats/${chatId}/messages`);\n  return response.data;\n};\nexport const sendMessage = async (chatId, content) => {\n  const response = await api.post(`/chats/${chatId}/messages`, {\n    content\n  });\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","loginUser","email","password","response","post","data","registerUser","userData","getMessages","chatId","get","sendMessage","content"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://your-backend-url/api'; // Replace with your actual backend URL\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Authentication services\r\nexport const loginUser = async (email, password) => {\r\n  const response = await api.post('/auth/login', { email, password });\r\n  return response.data;\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  const response = await api.post('/auth/register', userData);\r\n  return response.data;\r\n};\r\n\r\n// Chat services\r\nexport const getMessages = async (chatId) => {\r\n  const response = await api.get(`/chats/${chatId}/messages`);\r\n  return response.data;\r\n};\r\n\r\nexport const sendMessage = async (chatId, content) => {\r\n  const response = await api.post(`/chats/${chatId}/messages`, { content });\r\n  return response.data;\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B,CAAC,CAAC;;AAE/C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,aAAa,EAAE;IAAEH,KAAK;IAAEC;EAAS,CAAC,CAAC;EACnE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,MAAMJ,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;EAC3D,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,MAAMN,QAAQ,GAAG,MAAMf,GAAG,CAACsB,GAAG,CAAC,UAAUD,MAAM,WAAW,CAAC;EAC3D,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAOF,MAAM,EAAEG,OAAO,KAAK;EACpD,MAAMT,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,UAAUK,MAAM,WAAW,EAAE;IAAEG;EAAQ,CAAC,CAAC;EACzE,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}