{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Helper function to get auth token\nconst getToken = () => localStorage.getItem('token');\n\n// Helper function for API calls\nconst apiCall = async (endpoint, options = {}) => {\n  const token = getToken();\n  const defaultHeaders = {\n    'Content-Type': 'application/json',\n    ...(token && {\n      Authorization: `Bearer ${token}`\n    })\n  };\n  const config = {\n    ...options,\n    headers: {\n      ...defaultHeaders,\n      ...options.headers\n    }\n  };\n  const response = await fetch(`${API_URL}${endpoint}`, config);\n  if (!response.ok) {\n    const error = await response.json();\n    throw error;\n  }\n  return response.json();\n};\n\n// Auth API calls\nexport const loginUser = credentials => apiCall('/auth/login/', {\n  method: 'POST',\n  body: JSON.stringify(credentials)\n});\nexport const registerUser = userData => apiCall('/auth/signup/', {\n  method: 'POST',\n  body: JSON.stringify(userData)\n});\n\n// Chat API calls\nexport const sendChatMessage = message => apiCall('/chat/', {\n  method: 'POST',\n  body: JSON.stringify({\n    message\n  })\n});\nexport const getChatHistory = () => apiCall('/chat/history/', {\n  method: 'GET'\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","getToken","apiCall","endpoint","options","defaultHeaders","response","fetch","ok","error","json","loginUser","credentials","method","body","JSON","stringify","registerUser","userData","sendChatMessage","message","getChatHistory"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Helper function to get auth token\r\nconst getToken = () => localStorage.getItem('token');\r\n\r\n// Helper function for API calls\r\nconst apiCall = async (endpoint, options = {}) => {\r\n  const token = getToken();\r\n  \r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    ...(token && { Authorization: `Bearer ${token}` }),\r\n  };\r\n\r\n  const config = {\r\n    ...options,\r\n    headers: {\r\n      ...defaultHeaders,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  const response = await fetch(`${API_URL}${endpoint}`, config);\r\n  \r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw error;\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Auth API calls\r\nexport const loginUser = (credentials) => \r\n  apiCall('/auth/login/', {\r\n    method: 'POST',\r\n    body: JSON.stringify(credentials),\r\n  });\r\n\r\nexport const registerUser = (userData) =>\r\n  apiCall('/auth/signup/', {\r\n    method: 'POST',\r\n    body: JSON.stringify(userData),\r\n  });\r\n\r\n// Chat API calls\r\nexport const sendChatMessage = (message) =>\r\n  apiCall('/chat/', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ message }),\r\n  });\r\n\r\nexport const getChatHistory = () =>\r\n  apiCall('/chat/history/', {\r\n    method: 'GET',\r\n  });\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,MAAMK,QAAQ,GAAGA,CAAA,KAAMH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;AAEpD;AACA,MAAMG,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAChD,MAAMP,KAAK,GAAGI,QAAQ,CAAC,CAAC;EAExB,MAAMI,cAAc,GAAG;IACrB,cAAc,EAAE,kBAAkB;IAClC,IAAIR,KAAK,IAAI;MAAEG,aAAa,EAAE,UAAUH,KAAK;IAAG,CAAC;EACnD,CAAC;EAED,MAAMD,MAAM,GAAG;IACb,GAAGQ,OAAO;IACVZ,OAAO,EAAE;MACP,GAAGa,cAAc;MACjB,GAAGD,OAAO,CAACZ;IACb;EACF,CAAC;EAED,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGtB,OAAO,GAAGkB,QAAQ,EAAE,EAAEP,MAAM,CAAC;EAE7D,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACnC,MAAMD,KAAK;EACb;EAEA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAIC,WAAW,IACnCV,OAAO,CAAC,cAAc,EAAE;EACtBW,MAAM,EAAE,MAAM;EACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;AAClC,CAAC,CAAC;AAEJ,OAAO,MAAMK,YAAY,GAAIC,QAAQ,IACnChB,OAAO,CAAC,eAAe,EAAE;EACvBW,MAAM,EAAE,MAAM;EACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,QAAQ;AAC/B,CAAC,CAAC;;AAEJ;AACA,OAAO,MAAMC,eAAe,GAAIC,OAAO,IACrClB,OAAO,CAAC,QAAQ,EAAE;EAChBW,MAAM,EAAE,MAAM;EACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;IAAEI;EAAQ,CAAC;AAClC,CAAC,CAAC;AAEJ,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAC5BnB,OAAO,CAAC,gBAAgB,EAAE;EACxBW,MAAM,EAAE;AACV,CAAC,CAAC;AAEJ,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}