{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STSC\\\\Downloads\\\\Agent-Backend-main (3)\\\\my-app\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { loginUser, getUserProfile } from '../services/api';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [backendStatus, setBackendStatus] = useState(null);\n  const [testingBackend, setTestingBackend] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [availableEndpoints, setAvailableEndpoints] = useState([]);\n  const [testingEndpoints, setTestingEndpoints] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [endpointResults, setEndpointResults] = useState(null);\n  const passwordTooltipRef = useRef(null);\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // Test backend connectivity\n  const testBackendConnection = async () => {\n    setTestingBackend(true);\n    setBackendStatus(null);\n    const testEndpoints = ['http://127.0.0.1:8000/'];\n    let connected = false;\n    for (const endpoint of testEndpoints) {\n      try {\n        const response = await axios.get(endpoint, {\n          timeout: 5000\n        });\n        if (response.status >= 200 && response.status < 500) {\n          connected = true;\n          setBackendStatus({\n            connected: true,\n            message: 'Backend server is online.',\n            endpoint: endpoint\n          });\n          break;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          connected = true;\n          setBackendStatus({\n            connected: true,\n            message: 'Backend server is online (404 response).',\n            endpoint: endpoint\n          });\n          break;\n        }\n      }\n    }\n    if (!connected) {\n      setBackendStatus({\n        connected: false,\n        message: 'Cannot connect to backend server. Please ensure the server is running.',\n        error: 'All connection attempts failed'\n      });\n    }\n    setTestingBackend(false);\n  };\n\n  // Test which login endpoints are available\n  const testLoginEndpoints = async () => {\n    setTestingEndpoints(true);\n    setAvailableEndpoints([]);\n    const endpoints = ['http://127.0.0.1:8000/api/auth/login/', 'http://127.0.0.1:8000/apiV1/api/auth/login/', 'http://127.0.0.1:8000/users/api/login/', 'http://127.0.0.1:8000/apiV1/users/api/login/', 'http://127.0.0.1:8000/login/', 'http://127.0.0.1:8000/chatbot/login/'];\n    const available = [];\n    for (const endpoint of endpoints) {\n      try {\n        // Just check if the endpoint exists using OPTIONS method\n        const response = await axios({\n          method: 'options',\n          url: endpoint,\n          timeout: 3000\n        });\n\n        // If no error, endpoint might be valid\n        available.push({\n          url: endpoint,\n          status: response.status,\n          statusText: response.statusText\n        });\n      } catch (error) {\n        // Even a 405 Method Not Allowed is good, it means the endpoint exists\n        if (error.response && error.response.status !== 404) {\n          available.push({\n            url: endpoint,\n            status: error.response.status,\n            statusText: error.response.statusText\n          });\n        }\n      }\n    }\n    setAvailableEndpoints(available);\n    setTestingEndpoints(false);\n  };\n\n  // New function to test backend API endpoints\n  const testApiEndpoints = async () => {\n    setTestingEndpoints(true);\n    setEndpointResults(null);\n    try {\n      // First check if Django server is running at all using the health endpoint\n      const serverStatus = {\n        'Django Server Status': null\n      };\n      try {\n        // Try both health check endpoints\n        let healthResponse = null;\n        try {\n          healthResponse = await axios({\n            method: 'GET',\n            url: 'http://127.0.0.1:8000/users/health/',\n            timeout: 3000\n          });\n        } catch (err) {\n          healthResponse = await axios({\n            method: 'GET',\n            url: 'http://localhost:8000/users/health/',\n            timeout: 3000\n          });\n        }\n        if (healthResponse) {\n          var _healthResponse$data;\n          serverStatus['Django Server Status'] = {\n            status: 'Running',\n            statusCode: healthResponse.status,\n            message: ((_healthResponse$data = healthResponse.data) === null || _healthResponse$data === void 0 ? void 0 : _healthResponse$data.status) || 'OK'\n          };\n        }\n      } catch (error) {\n        if (error.response) {\n          // Server responded with an error\n          serverStatus['Django Server Status'] = {\n            status: 'Running but returned error',\n            statusCode: error.response.status,\n            error: 'Server responded with an error'\n          };\n        } else if (error.request) {\n          serverStatus['Django Server Status'] = {\n            status: 'Not running or not accessible',\n            error: 'Could not connect to Django server'\n          };\n        } else {\n          serverStatus['Django Server Status'] = {\n            status: 'Error checking server',\n            error: error.message\n          };\n        }\n      }\n\n      // Define the exact endpoints from your Django backend code\n      const endpoints = [\n      // Login endpoints\n      'http://127.0.0.1:8000/api/auth/login/', 'http://127.0.0.1:8000/users/api/login/', 'http://127.0.0.1:8000/apiV1/api/auth/login/', 'http://localhost:8000/api/auth/login/', 'http://localhost:8000/users/api/login/', 'http://localhost:8000/apiV1/api/auth/login/',\n      // Signup/Register endpoints\n      'http://127.0.0.1:8000/api/auth/signup/', 'http://127.0.0.1:8000/users/api/register/', 'http://localhost:8000/api/auth/signup/', 'http://localhost:8000/users/api/register/'];\n      const results = {\n        ...serverStatus\n      };\n\n      // Test each endpoint\n      for (const endpoint of endpoints) {\n        try {\n          var _response$headers;\n          // First try an OPTIONS request to see if the endpoint exists\n          const response = await axios({\n            method: 'OPTIONS',\n            url: endpoint,\n            timeout: 3000\n          });\n          results[endpoint] = {\n            status: 'Available',\n            statusCode: response.status,\n            methods: ((_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers['allow']) || 'Unknown'\n          };\n        } catch (error) {\n          if (error.response) {\n            // Server responded with an error code\n            if (error.response.status === 404) {\n              results[endpoint] = {\n                status: 'Not Found (404)',\n                statusCode: error.response.status,\n                error: 'Endpoint does not exist'\n              };\n            } else if (error.response.status === 403 || error.response.status === 401) {\n              results[endpoint] = {\n                status: 'Available (Auth Required)',\n                statusCode: error.response.status,\n                message: 'Endpoint exists but needs authentication'\n              };\n            } else {\n              results[endpoint] = {\n                status: 'Error Response',\n                statusCode: error.response.status,\n                error: error.response.statusText || 'Unknown server error'\n              };\n            }\n          } else if (error.request) {\n            // Request was made but no response\n            results[endpoint] = {\n              status: 'No Response',\n              error: 'Request timeout or server not responding'\n            };\n          } else {\n            // Error setting up the request\n            results[endpoint] = {\n              status: 'Request Error',\n              error: error.message\n            };\n          }\n        }\n      }\n\n      // Add troubleshooting tips based on results\n      results['TROUBLESHOOTING'] = {\n        status: 'Tips',\n        tips: ['Make sure your Django server is running with: python manage.py runserver', 'Verify the server is running on port 8000', 'Check your Django URL configurations in backend/urls.py, users/urls.py, and chatbot/urls.py', 'Ensure CORS is properly configured in your Django settings', 'Try using localhost instead of 127.0.0.1 if one works but not the other']\n      };\n      setEndpointResults(results);\n      console.log('API Endpoint Test Results:', results);\n\n      // Check if we found any working endpoints\n      const workingEndpoints = Object.entries(results).filter(([key, result]) => key !== 'TROUBLESHOOTING' && key !== 'Django Server Status' && (result.status === 'Available' || result.status === 'Available (Auth Required)')).map(([endpoint]) => endpoint);\n      setAvailableEndpoints(workingEndpoints);\n    } catch (error) {\n      console.error('Error testing endpoints:', error);\n      setEndpointResults({\n        error: error.message,\n        TROUBLESHOOTING: {\n          status: 'Error',\n          tips: ['Make sure your Django server is running', 'Check your network connection', 'Verify that CORS is enabled on your server']\n        }\n      });\n    } finally {\n      setTestingEndpoints(false);\n    }\n  };\n  useEffect(() => {\n    testBackendConnection();\n  }, []);\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const handlePasswordFocus = () => {\n    if (passwordTooltipRef.current) {\n      passwordTooltipRef.current.style.display = 'block';\n    }\n  };\n  const handlePasswordBlur = () => {\n    if (passwordTooltipRef.current) {\n      passwordTooltipRef.current.style.display = 'none';\n    }\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n    if (passwordTooltipRef.current) {\n      if (e.target.value.length >= 8) {\n        passwordTooltipRef.current.style.display = 'none';\n      } else {\n        passwordTooltipRef.current.style.display = 'block';\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    // Basic validation\n    if (!email) {\n      setError('Email is required');\n      setLoading(false);\n      return;\n    }\n    if (!password) {\n      setError('Password is required');\n      setLoading(false);\n      return;\n    }\n    try {\n      console.log('Submitting login form with:', {\n        email,\n        password: '*******'\n      });\n      const response = await loginUser({\n        email,\n        password\n      });\n      console.log('Login response:', response);\n      if (response.success) {\n        // Store user state via context\n        await login(response);\n\n        // If remember me is checked, save email to localStorage\n        if (rememberMe) {\n          localStorage.setItem('rememberedEmail', email);\n        } else {\n          localStorage.removeItem('rememberedEmail');\n        }\n        console.log('Authentication successful, redirecting to directories page');\n\n        // Redirect to directories page after successful login\n        navigate('/directories');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message || 'Failed to log in. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check for saved email on component mount\n  useEffect(() => {\n    const savedEmail = localStorage.getItem('savedEmail');\n    if (savedEmail) {\n      setEmail(savedEmail);\n      setRememberMe(true);\n    }\n\n    // Check if already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      navigate('/directories');\n    }\n  }, [navigate]);\n\n  // Image animation effect from original code\n  useEffect(() => {\n    const handleMouseMove = event => {\n      const image = document.querySelector('.right-corner-image');\n      if (!image) return;\n      const rect = image.getBoundingClientRect();\n\n      // Check if mouse is over the image\n      const isMouseOverImage = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\n\n      // Only update the position if the mouse is not over the image\n      if (!isMouseOverImage) {\n        image.style.transform = `translate(${event.clientX / 100 - 20}px, ${event.clientY / 100 - 20}px)`;\n      }\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n\n    // Clean up event listener when component unmounts\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/about\",\n          children: \"About Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/team\",\n          children: \"Our Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/contact\",\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }, this), backendStatus && !backendStatus.connected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [backendStatus.message, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: testBackendConnection,\n            disabled: testingBackend,\n            className: \"retry-button\",\n            children: testingBackend ? 'Testing...' : 'Retry Connection'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), backendStatus && backendStatus.connected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"api-test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: testLoginEndpoints,\n            disabled: testingEndpoints,\n            className: \"test-api-button\",\n            children: testingEndpoints ? 'Testing API Endpoints...' : 'Test Login API Endpoints'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), availableEndpoints.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"endpoint-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Available Login Endpoints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: availableEndpoints.map((endpoint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [endpoint.url, \" - \", endpoint.status, \" \", endpoint.statusText]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"endpoint-tip\",\n              children: \"Try using one of these endpoints in your login request.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"example@gmail.com\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: passwordVisible ? \"text\" : \"password\",\n              id: \"password\",\n              value: password,\n              onChange: handlePasswordChange,\n              onFocus: handlePasswordFocus,\n              onBlur: handlePasswordBlur,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"eye-icon\",\n              onClick: togglePasswordVisibility,\n              children: passwordVisible ? '🙉' : '🙈'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltip\",\n              ref: passwordTooltipRef,\n              children: \"Enter at least 8 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"rememberMe\",\n              checked: rememberMe,\n              onChange: e => setRememberMe(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rememberMe\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/forgot-password\",\n              className: \"forgot-password\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-button\",\n              disabled: loading || backendStatus && !backendStatus.connected,\n              children: loading ? 'Signing in...' : 'Sign in'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-container\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"signup-button\",\n            children: \"No account? Join Us \\uD83E\\uDD1D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"api-test-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"test-api-button\",\n            onClick: testApiEndpoints,\n            disabled: testingEndpoints,\n            children: testingEndpoints ? \"Testing API Endpoints...\" : \"Test Backend Connectivity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), endpointResults && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"endpoint-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Server Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), endpointResults['Django Server Status'] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `server-status ${endpointResults['Django Server Status'].status.includes('Not running') ? 'error' : 'success'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 24\n                }, this), \" \", endpointResults['Django Server Status'].status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this), endpointResults['Django Server Status'].message && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: endpointResults['Django Server Status'].message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 23\n              }, this), endpointResults['Django Server Status'].error && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-text\",\n                children: endpointResults['Django Server Status'].error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: \"Could not determine server status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"API Endpoints\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Object.entries(endpointResults).filter(([key]) => key !== 'TROUBLESHOOTING' && key !== 'Django Server Status' && key !== 'error').map(([endpoint, result]) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: result.status === 'Available' ? 'status-success' : result.status === 'Available (Auth Required)' ? 'status-warning' : 'status-error',\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: endpoint\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"endpoint-status\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-indicator\",\n                    children: result.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 27\n                  }, this), result.statusCode && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" (Status: \", result.statusCode, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 25\n                }, this), result.methods && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"endpoint-methods\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"Allowed methods: \", result.methods]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 27\n                }, this), result.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"endpoint-message\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: result.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 27\n                }, this), result.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"endpoint-error\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"error-text\",\n                    children: result.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 27\n                }, this)]\n              }, endpoint, true, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), endpointResults['TROUBLESHOOTING'] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"troubleshooting-tips\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Troubleshooting Tips\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: endpointResults['TROUBLESHOOTING'].tips.map((tip, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: tip\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"next-steps\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"What to do next:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 19\n              }, this), availableEndpoints.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Found working endpoints! Login should now work using one of the available endpoints.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"No working endpoints found.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 616,\n                    columnNumber: 26\n                  }, this), \" Make sure:\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Django server is running (\", /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"python manage.py runserver\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 55\n                    }, this), \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"The server is running on port 8000\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"You have CORS configured properly in your Django settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"The correct URL paths are configured in \", /*#__PURE__*/_jsxDEV(\"code\", {\n                      children: \"urlpatterns\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"retry-button\",\n              onClick: testApiEndpoints,\n              children: \"Retry Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/hens.jpg\",\n        alt: \"Right Corner Image\",\n        className: \"right-corner-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"+on/ELMQB8Ey6QpFKbrmIvDZG98=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","Link","useNavigate","AuthContext","loginUser","getUserProfile","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","backendStatus","setBackendStatus","testingBackend","setTestingBackend","rememberMe","setRememberMe","passwordVisible","setPasswordVisible","availableEndpoints","setAvailableEndpoints","testingEndpoints","setTestingEndpoints","showPassword","setShowPassword","endpointResults","setEndpointResults","passwordTooltipRef","login","navigate","testBackendConnection","testEndpoints","connected","endpoint","response","get","timeout","status","message","testLoginEndpoints","endpoints","available","method","url","push","statusText","testApiEndpoints","serverStatus","healthResponse","err","_healthResponse$data","statusCode","data","request","results","_response$headers","methods","headers","tips","console","log","workingEndpoints","Object","entries","filter","key","result","map","TROUBLESHOOTING","togglePasswordVisibility","handlePasswordFocus","current","style","display","handlePasswordBlur","handlePasswordChange","e","target","value","length","handleSubmit","preventDefault","success","localStorage","setItem","removeItem","savedEmail","getItem","token","handleMouseMove","event","image","document","querySelector","rect","getBoundingClientRect","isMouseOverImage","clientX","left","right","clientY","top","bottom","transform","addEventListener","removeEventListener","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","disabled","index","onSubmit","type","id","onChange","placeholder","required","htmlFor","onFocus","onBlur","ref","checked","to","includes","tip","_c","$RefreshReg$"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { loginUser, getUserProfile } from '../services/api';\nimport axios from 'axios';\nimport '../styles/Login.css';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [backendStatus, setBackendStatus] = useState(null);\n  const [testingBackend, setTestingBackend] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [availableEndpoints, setAvailableEndpoints] = useState([]);\n  const [testingEndpoints, setTestingEndpoints] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [endpointResults, setEndpointResults] = useState(null);\n  const passwordTooltipRef = useRef(null);\n  const { login } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // Test backend connectivity\n  const testBackendConnection = async () => {\n    setTestingBackend(true);\n    setBackendStatus(null);\n    \n    const testEndpoints = [\n      'http://127.0.0.1:8000/'\n    ];\n    \n    let connected = false;\n    \n    for (const endpoint of testEndpoints) {\n      try {\n        const response = await axios.get(endpoint, { timeout: 5000 });\n        if (response.status >= 200 && response.status < 500) {\n          connected = true;\n          setBackendStatus({\n            connected: true,\n            message: 'Backend server is online.',\n            endpoint: endpoint\n          });\n          break;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          connected = true;\n          setBackendStatus({\n            connected: true,\n            message: 'Backend server is online (404 response).',\n            endpoint: endpoint\n          });\n          break;\n        }\n      }\n    }\n    \n    if (!connected) {\n      setBackendStatus({\n        connected: false,\n        message: 'Cannot connect to backend server. Please ensure the server is running.',\n        error: 'All connection attempts failed'\n      });\n    }\n    \n    setTestingBackend(false);\n  };\n  \n  // Test which login endpoints are available\n  const testLoginEndpoints = async () => {\n    setTestingEndpoints(true);\n    setAvailableEndpoints([]);\n    \n    const endpoints = [\n      'http://127.0.0.1:8000/api/auth/login/',\n      'http://127.0.0.1:8000/apiV1/api/auth/login/',\n      'http://127.0.0.1:8000/users/api/login/',\n      'http://127.0.0.1:8000/apiV1/users/api/login/',\n      'http://127.0.0.1:8000/login/',\n      'http://127.0.0.1:8000/chatbot/login/'\n    ];\n    \n    const available = [];\n    \n    for (const endpoint of endpoints) {\n      try {\n        // Just check if the endpoint exists using OPTIONS method\n        const response = await axios({\n          method: 'options',\n          url: endpoint,\n          timeout: 3000\n        });\n        \n        // If no error, endpoint might be valid\n        available.push({\n          url: endpoint,\n          status: response.status,\n          statusText: response.statusText\n        });\n      } catch (error) {\n        // Even a 405 Method Not Allowed is good, it means the endpoint exists\n        if (error.response && error.response.status !== 404) {\n          available.push({\n            url: endpoint,\n            status: error.response.status,\n            statusText: error.response.statusText\n          });\n        }\n      }\n    }\n    \n    setAvailableEndpoints(available);\n    setTestingEndpoints(false);\n  };\n\n  // New function to test backend API endpoints\n  const testApiEndpoints = async () => {\n    setTestingEndpoints(true);\n    setEndpointResults(null);\n    \n    try {\n      // First check if Django server is running at all using the health endpoint\n      const serverStatus = {\n        'Django Server Status': null\n      };\n      \n      try {\n        // Try both health check endpoints\n        let healthResponse = null;\n        try {\n          healthResponse = await axios({\n            method: 'GET',\n            url: 'http://127.0.0.1:8000/users/health/',\n            timeout: 3000\n          });\n        } catch (err) {\n          healthResponse = await axios({\n            method: 'GET',\n            url: 'http://localhost:8000/users/health/',\n            timeout: 3000\n          });\n        }\n        \n        if (healthResponse) {\n          serverStatus['Django Server Status'] = {\n            status: 'Running',\n            statusCode: healthResponse.status,\n            message: healthResponse.data?.status || 'OK'\n          };\n        }\n      } catch (error) {\n        if (error.response) {\n          // Server responded with an error\n          serverStatus['Django Server Status'] = {\n            status: 'Running but returned error',\n            statusCode: error.response.status,\n            error: 'Server responded with an error'\n          };\n        } else if (error.request) {\n          serverStatus['Django Server Status'] = {\n            status: 'Not running or not accessible',\n            error: 'Could not connect to Django server'\n          };\n        } else {\n          serverStatus['Django Server Status'] = {\n            status: 'Error checking server',\n            error: error.message\n          };\n        }\n      }\n      \n      // Define the exact endpoints from your Django backend code\n      const endpoints = [\n        // Login endpoints\n        'http://127.0.0.1:8000/api/auth/login/',\n        'http://127.0.0.1:8000/users/api/login/',\n        'http://127.0.0.1:8000/apiV1/api/auth/login/',\n        'http://localhost:8000/api/auth/login/',\n        'http://localhost:8000/users/api/login/',\n        'http://localhost:8000/apiV1/api/auth/login/',\n        // Signup/Register endpoints\n        'http://127.0.0.1:8000/api/auth/signup/',\n        'http://127.0.0.1:8000/users/api/register/',\n        'http://localhost:8000/api/auth/signup/',\n        'http://localhost:8000/users/api/register/'\n      ];\n      \n      const results = {...serverStatus};\n      \n      // Test each endpoint\n      for (const endpoint of endpoints) {\n        try {\n          // First try an OPTIONS request to see if the endpoint exists\n          const response = await axios({\n            method: 'OPTIONS',\n            url: endpoint,\n            timeout: 3000\n          });\n          \n          results[endpoint] = {\n            status: 'Available',\n            statusCode: response.status,\n            methods: response.headers?.['allow'] || 'Unknown'\n          };\n        } catch (error) {\n          if (error.response) {\n            // Server responded with an error code\n            if (error.response.status === 404) {\n              results[endpoint] = {\n                status: 'Not Found (404)',\n                statusCode: error.response.status,\n                error: 'Endpoint does not exist'\n              };\n            } else if (error.response.status === 403 || error.response.status === 401) {\n              results[endpoint] = {\n                status: 'Available (Auth Required)',\n                statusCode: error.response.status,\n                message: 'Endpoint exists but needs authentication'\n              };\n            } else {\n              results[endpoint] = {\n                status: 'Error Response',\n                statusCode: error.response.status,\n                error: error.response.statusText || 'Unknown server error'\n              };\n            }\n          } else if (error.request) {\n            // Request was made but no response\n            results[endpoint] = {\n              status: 'No Response',\n              error: 'Request timeout or server not responding'\n            };\n          } else {\n            // Error setting up the request\n            results[endpoint] = {\n              status: 'Request Error',\n              error: error.message\n            };\n          }\n        }\n      }\n      \n      // Add troubleshooting tips based on results\n      results['TROUBLESHOOTING'] = {\n        status: 'Tips',\n        tips: [\n          'Make sure your Django server is running with: python manage.py runserver',\n          'Verify the server is running on port 8000',\n          'Check your Django URL configurations in backend/urls.py, users/urls.py, and chatbot/urls.py',\n          'Ensure CORS is properly configured in your Django settings',\n          'Try using localhost instead of 127.0.0.1 if one works but not the other'\n        ]\n      };\n      \n      setEndpointResults(results);\n      console.log('API Endpoint Test Results:', results);\n      \n      // Check if we found any working endpoints\n      const workingEndpoints = Object.entries(results)\n        .filter(([key, result]) => \n          key !== 'TROUBLESHOOTING' && \n          key !== 'Django Server Status' && \n          (result.status === 'Available' || result.status === 'Available (Auth Required)')\n        )\n        .map(([endpoint]) => endpoint);\n      \n      setAvailableEndpoints(workingEndpoints);\n      \n    } catch (error) {\n      console.error('Error testing endpoints:', error);\n      setEndpointResults({ \n        error: error.message,\n        TROUBLESHOOTING: {\n          status: 'Error',\n          tips: [\n            'Make sure your Django server is running',\n            'Check your network connection',\n            'Verify that CORS is enabled on your server'\n          ]\n        }\n      });\n    } finally {\n      setTestingEndpoints(false);\n    }\n  };\n\n  useEffect(() => {\n    testBackendConnection();\n  }, []);\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const handlePasswordFocus = () => {\n    if (passwordTooltipRef.current) {\n      passwordTooltipRef.current.style.display = 'block';\n    }\n  };\n\n  const handlePasswordBlur = () => {\n    if (passwordTooltipRef.current) {\n      passwordTooltipRef.current.style.display = 'none';\n    }\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n    if (passwordTooltipRef.current) {\n      if (e.target.value.length >= 8) {\n        passwordTooltipRef.current.style.display = 'none';\n      } else {\n        passwordTooltipRef.current.style.display = 'block';\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    \n    // Basic validation\n    if (!email) {\n      setError('Email is required');\n      setLoading(false);\n      return;\n    }\n    \n    if (!password) {\n      setError('Password is required');\n      setLoading(false);\n      return;\n    }\n    \n    try {\n      console.log('Submitting login form with:', { email, password: '*******' });\n      const response = await loginUser({ email, password });\n      \n      console.log('Login response:', response);\n      \n      if (response.success) {\n        // Store user state via context\n        await login(response);\n        \n        // If remember me is checked, save email to localStorage\n        if (rememberMe) {\n          localStorage.setItem('rememberedEmail', email);\n        } else {\n          localStorage.removeItem('rememberedEmail');\n        }\n        \n        console.log('Authentication successful, redirecting to directories page');\n        \n        // Redirect to directories page after successful login\n        navigate('/directories');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message || 'Failed to log in. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Check for saved email on component mount\n  useEffect(() => {\n    const savedEmail = localStorage.getItem('savedEmail');\n    if (savedEmail) {\n      setEmail(savedEmail);\n      setRememberMe(true);\n    }\n    \n    // Check if already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      navigate('/directories');\n    }\n  }, [navigate]);\n\n  // Image animation effect from original code\n  useEffect(() => {\n    const handleMouseMove = (event) => {\n      const image = document.querySelector('.right-corner-image');\n      if (!image) return;\n      \n      const rect = image.getBoundingClientRect();\n      \n      // Check if mouse is over the image\n      const isMouseOverImage = (\n        event.clientX >= rect.left &&\n        event.clientX <= rect.right &&\n        event.clientY >= rect.top &&\n        event.clientY <= rect.bottom\n      );\n      \n      // Only update the position if the mouse is not over the image\n      if (!isMouseOverImage) {\n        image.style.transform = `translate(${event.clientX / 100 - 20}px, ${event.clientY / 100 - 20}px)`;\n      }\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    \n    // Clean up event listener when component unmounts\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  return (\n    <div className=\"login-page\">\n      <nav className=\"navbar\">\n        <img src=\"/logo.png\" alt=\"Logo\" className=\"logo\" />\n        <div className=\"nav-links\">\n          <a href=\"/\">Home</a>\n          <a href=\"/about\">About Us</a>\n          <a href=\"/team\">Our Team</a>\n          <a href=\"/contact\">Contact Us</a>\n        </div>\n      </nav>\n      \n      <div className=\"container\">\n        <div className=\"form-container\">\n          <h2>Sign in</h2>\n          \n          {error && <div className=\"error-message\">{error}</div>}\n          \n          {backendStatus && !backendStatus.connected && (\n            <div className=\"error-message\">\n              {backendStatus.message}\n              <button \n                onClick={testBackendConnection}\n                disabled={testingBackend}\n                className=\"retry-button\"\n              >\n                {testingBackend ? 'Testing...' : 'Retry Connection'}\n              </button>\n            </div>\n          )}\n          \n          {backendStatus && backendStatus.connected && (\n            <div className=\"api-test-section\">\n              <button \n                onClick={testLoginEndpoints}\n                disabled={testingEndpoints}\n                className=\"test-api-button\"\n              >\n                {testingEndpoints ? 'Testing API Endpoints...' : 'Test Login API Endpoints'}\n              </button>\n              \n              {availableEndpoints.length > 0 && (\n                <div className=\"endpoint-results\">\n                  <h3>Available Login Endpoints:</h3>\n                  <ul>\n                    {availableEndpoints.map((endpoint, index) => (\n                      <li key={index}>\n                        {endpoint.url} - {endpoint.status} {endpoint.statusText}\n                      </li>\n                    ))}\n                  </ul>\n                  <p className=\"endpoint-tip\">\n                    Try using one of these endpoints in your login request.\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n          \n          <form onSubmit={handleSubmit}>\n            <div className=\"textbox\">\n              <input \n                type=\"email\" \n                id=\"email\" \n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"example@gmail.com\"\n                required \n              />\n              <label className=\"label\" htmlFor=\"email\">Email</label>\n            </div>\n            \n            <div className=\"textbox\">\n              <input \n                type={passwordVisible ? \"text\" : \"password\"}\n                id=\"password\" \n                value={password}\n                onChange={handlePasswordChange}\n                onFocus={handlePasswordFocus}\n                onBlur={handlePasswordBlur}\n                required \n              />\n              <label className=\"label\" htmlFor=\"password\">Password</label>\n              <span className=\"eye-icon\" onClick={togglePasswordVisibility}>\n                {passwordVisible ? '🙉' : '🙈'}\n              </span>\n              <span className=\"tooltip\" ref={passwordTooltipRef}>Enter at least 8 characters</span>\n            </div>\n            \n            <div className=\"checkbox-container\">\n              <input \n                type=\"checkbox\" \n                id=\"rememberMe\"\n                checked={rememberMe}\n                onChange={(e) => setRememberMe(e.target.checked)} \n              />\n              <label htmlFor=\"rememberMe\">Remember me</label>\n              <a href=\"/forgot-password\" className=\"forgot-password\">Forgot Password?</a>\n            </div>\n            \n            <div className=\"form-group\">\n              <button \n                type=\"submit\" \n                className=\"login-button\" \n                disabled={loading || (backendStatus && !backendStatus.connected)}\n              >\n                {loading ? 'Signing in...' : 'Sign in'}\n              </button>\n            </div>\n          </form>\n          \n          <div className=\"signup-container\">\n            <Link to=\"/signup\" className=\"signup-button\">No account? Join Us 🤝</Link>\n          </div>\n\n          {/* API Testing Section */}\n          <div className=\"api-test-section\">\n            <button \n              type=\"button\" \n              className=\"test-api-button\" \n              onClick={testApiEndpoints}\n              disabled={testingEndpoints}\n            >\n              {testingEndpoints ? \"Testing API Endpoints...\" : \"Test Backend Connectivity\"}\n            </button>\n            \n            {endpointResults && (\n              <div className=\"endpoint-results\">\n                <h3>Server Status</h3>\n                \n                {endpointResults['Django Server Status'] ? (\n                  <div className={`server-status ${endpointResults['Django Server Status'].status.includes('Not running') ? 'error' : 'success'}`}>\n                    <p><strong>Status:</strong> {endpointResults['Django Server Status'].status}</p>\n                    {endpointResults['Django Server Status'].message && (\n                      <p>{endpointResults['Django Server Status'].message}</p>\n                    )}\n                    {endpointResults['Django Server Status'].error && (\n                      <p className=\"error-text\">{endpointResults['Django Server Status'].error}</p>\n                    )}\n                  </div>\n                ) : (\n                  <p className=\"error-text\">Could not determine server status</p>\n                )}\n                \n                <h3>API Endpoints</h3>\n                <ul>\n                  {Object.entries(endpointResults)\n                    .filter(([key]) => \n                      key !== 'TROUBLESHOOTING' && \n                      key !== 'Django Server Status' && \n                      key !== 'error'\n                    )\n                    .map(([endpoint, result]) => (\n                      <li key={endpoint} className={\n                        result.status === 'Available' ? 'status-success' : \n                        result.status === 'Available (Auth Required)' ? 'status-warning' :\n                        'status-error'\n                      }>\n                        <strong>{endpoint}</strong>\n                        <div className=\"endpoint-status\">\n                          <span className=\"status-indicator\">{result.status}</span>\n                          {result.statusCode && <span> (Status: {result.statusCode})</span>}\n                        </div>\n                        \n                        {result.methods && (\n                          <div className=\"endpoint-methods\">\n                            <small>Allowed methods: {result.methods}</small>\n                          </div>\n                        )}\n                        \n                        {result.message && (\n                          <div className=\"endpoint-message\">\n                            <small>{result.message}</small>\n                          </div>\n                        )}\n                        \n                        {result.error && (\n                          <div className=\"endpoint-error\">\n                            <small className=\"error-text\">{result.error}</small>\n                          </div>\n                        )}\n                      </li>\n                    ))}\n                </ul>\n                \n                {endpointResults['TROUBLESHOOTING'] && (\n                  <div className=\"troubleshooting-tips\">\n                    <h3>Troubleshooting Tips</h3>\n                    <ul>\n                      {endpointResults['TROUBLESHOOTING'].tips.map((tip, index) => (\n                        <li key={index}>{tip}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                \n                <div className=\"next-steps\">\n                  <h3>What to do next:</h3>\n                  {availableEndpoints.length > 0 ? (\n                    <p>Found working endpoints! Login should now work using one of the available endpoints.</p>\n                  ) : (\n                    <div>\n                      <p><strong>No working endpoints found.</strong> Make sure:</p>\n                      <ol>\n                        <li>Django server is running (<code>python manage.py runserver</code>)</li>\n                        <li>The server is running on port 8000</li>\n                        <li>You have CORS configured properly in your Django settings</li>\n                        <li>The correct URL paths are configured in <code>urlpatterns</code></li>\n                      </ol>\n                    </div>\n                  )}\n                </div>\n                \n                <button \n                  type=\"button\" \n                  className=\"retry-button\"\n                  onClick={testApiEndpoints}\n                >\n                  Retry Test\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <img src=\"/hens.jpg\" alt=\"Right Corner Image\" className=\"right-corner-image\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}