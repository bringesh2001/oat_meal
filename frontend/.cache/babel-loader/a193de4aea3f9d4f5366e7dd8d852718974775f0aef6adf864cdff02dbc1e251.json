{"ast":null,"code":"import axios from 'axios';\n\n// Make sure this points to your Django backend\nconst API_URL = 'http://localhost:8000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Add withCredentials to handle CORS with credentials\n  withCredentials: false\n});\n\n// Add request/response interceptors for better error handling\napi.interceptors.request.use(config => {\n  console.log('Sending request to:', config.url, 'with data:', config.data);\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  console.error('API Response Error:', error);\n  if (error.response) {\n    console.error('Response data:', error.response.data);\n    console.error('Response status:', error.response.status);\n    console.error('Response headers:', error.response.headers);\n  } else if (error.request) {\n    console.error('No response received. Request:', error.request);\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const loginUser = async credentials => {\n  try {\n    console.log('Logging in with:', credentials);\n    const response = await api.post('/api/auth/login/', credentials);\n    console.log('Raw login response:', response);\n\n    // Store token in localStorage\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Login error details:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Login failed. Server may be unavailable.'\n    };\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    console.log('Registering with:', userData);\n\n    // Try using fetch directly instead of axios\n    const response = await fetch(`${API_URL}/api/auth/signup/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData),\n      mode: 'cors' // Explicitly set CORS mode\n    });\n    console.log('Registration response status:', response.status);\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({\n        message: 'Registration failed'\n      }));\n      throw errorData;\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Registration error details:', error);\n    throw error.message ? {\n      message: error.message\n    } : {\n      message: 'Registration failed'\n    };\n  }\n};\nexport const getUserProfile = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    console.log('Getting user profile with token:', token ? 'Token exists' : 'No token');\n    const response = await api.get('/api/auth/profile/');\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('Profile fetch error:', error);\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n      message: 'Failed to fetch profile'\n    };\n  }\n};\n\n// Chat API calls\nexport const sendChatMessage = message => apiCall('/chat/', {\n  method: 'POST',\n  body: JSON.stringify({\n    message\n  })\n});\nexport const getChatHistory = () => apiCall('/chat/history/', {\n  method: 'GET'\n});\n\n// Helper function for API calls\nconst apiCall = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('token');\n  const defaultHeaders = {\n    'Content-Type': 'application/json',\n    ...(token && {\n      Authorization: `Bearer ${token}`\n    })\n  };\n  const config = {\n    ...options,\n    headers: {\n      ...defaultHeaders,\n      ...options.headers\n    }\n  };\n  const response = await fetch(`${API_URL}${endpoint}`, config);\n  if (!response.ok) {\n    const error = await response.json();\n    throw error;\n  }\n  return response.json();\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","console","log","url","data","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","loginUser","credentials","post","setItem","_error$response","_error$response2","message","registerUser","userData","fetch","method","body","JSON","stringify","mode","ok","errorData","json","catch","getUserProfile","Error","get","_error$response3","sendChatMessage","apiCall","getChatHistory","endpoint","options","defaultHeaders"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Make sure this points to your Django backend\r\nconst API_URL = 'http://localhost:8000';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  // Add withCredentials to handle CORS with credentials\r\n  withCredentials: false\r\n});\r\n\r\n// Add request/response interceptors for better error handling\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('Sending request to:', config.url, 'with data:', config.data);\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Response Error:', error);\r\n    if (error.response) {\r\n      console.error('Response data:', error.response.data);\r\n      console.error('Response status:', error.response.status);\r\n      console.error('Response headers:', error.response.headers);\r\n    } else if (error.request) {\r\n      console.error('No response received. Request:', error.request);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    console.log('Logging in with:', credentials);\r\n    const response = await api.post('/api/auth/login/', credentials);\r\n    console.log('Raw login response:', response);\r\n    \r\n    // Store token in localStorage\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error details:', error.response?.data || error.message);\r\n    throw error.response?.data || { message: 'Login failed. Server may be unavailable.' };\r\n  }\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    console.log('Registering with:', userData);\r\n    \r\n    // Try using fetch directly instead of axios\r\n    const response = await fetch(`${API_URL}/api/auth/signup/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n      mode: 'cors', // Explicitly set CORS mode\r\n    });\r\n    \r\n    console.log('Registration response status:', response.status);\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({ message: 'Registration failed' }));\r\n      throw errorData;\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Registration error details:', error);\r\n    throw error.message ? { message: error.message } : { message: 'Registration failed' };\r\n  }\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      throw new Error('No authentication token found');\r\n    }\r\n    \r\n    console.log('Getting user profile with token:', token ? 'Token exists' : 'No token');\r\n    const response = await api.get('/api/auth/profile/');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Profile fetch error:', error);\r\n    throw error.response?.data || { message: 'Failed to fetch profile' };\r\n  }\r\n};\r\n\r\n// Chat API calls\r\nexport const sendChatMessage = (message) =>\r\n  apiCall('/chat/', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ message }),\r\n  });\r\n\r\nexport const getChatHistory = () =>\r\n  apiCall('/chat/history/', {\r\n    method: 'GET',\r\n  });\r\n\r\n// Helper function for API calls\r\nconst apiCall = async (endpoint, options = {}) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    ...(token && { Authorization: `Bearer ${token}` }),\r\n  };\r\n\r\n  const config = {\r\n    ...options,\r\n    headers: {\r\n      ...defaultHeaders,\r\n      ...options.headers,\r\n    },\r\n  };\r\n\r\n  const response = await fetch(`${API_URL}${endpoint}`, config);\r\n  \r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw error;\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}