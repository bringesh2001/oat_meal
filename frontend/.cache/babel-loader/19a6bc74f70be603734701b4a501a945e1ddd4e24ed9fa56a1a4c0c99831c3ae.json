{"ast":null,"code":"// Simple test script to check API connectivity\n\nasync function testApi() {\n  try {\n    console.log('Testing API connectivity...');\n\n    // Test the basic endpoint\n    const testUrl = 'http://localhost:8000/test-api/';\n    console.log('Fetching:', testUrl);\n    const response = await fetch(testUrl);\n    console.log('Response status:', response.status);\n    if (response.ok) {\n      const data = await response.json();\n      console.log('Data received:', data);\n    } else {\n      console.error('Failed to fetch. Status:', response.status);\n    }\n  } catch (error) {\n    console.error('Error testing API:', error);\n  }\n}\nasync function testCountriesApi() {\n  try {\n    console.log('Testing Countries API...');\n\n    // Test the countries endpoint\n    const countriesUrl = 'http://localhost:8000/api/countries/';\n    console.log('Fetching countries:', countriesUrl);\n    const response = await fetch(countriesUrl);\n    console.log('Countries response status:', response.status);\n    if (response.ok) {\n      const data = await response.json();\n      console.log('Countries data received:', data);\n    } else {\n      console.error('Failed to fetch countries. Status:', response.status);\n    }\n  } catch (error) {\n    console.error('Error testing Countries API:', error);\n  }\n}\n\n// Export the test functions\nexport { testApi, testCountriesApi };","map":{"version":3,"names":["testApi","console","log","testUrl","response","fetch","status","ok","data","json","error","testCountriesApi","countriesUrl"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/test-api.js"],"sourcesContent":["// Simple test script to check API connectivity\r\n\r\nasync function testApi() {\r\n  try {\r\n    console.log('Testing API connectivity...');\r\n    \r\n    // Test the basic endpoint\r\n    const testUrl = 'http://localhost:8000/test-api/';\r\n    console.log('Fetching:', testUrl);\r\n    const response = await fetch(testUrl);\r\n    console.log('Response status:', response.status);\r\n    \r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log('Data received:', data);\r\n    } else {\r\n      console.error('Failed to fetch. Status:', response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error testing API:', error);\r\n  }\r\n}\r\n\r\nasync function testCountriesApi() {\r\n  try {\r\n    console.log('Testing Countries API...');\r\n    \r\n    // Test the countries endpoint\r\n    const countriesUrl = 'http://localhost:8000/api/countries/';\r\n    console.log('Fetching countries:', countriesUrl);\r\n    const response = await fetch(countriesUrl);\r\n    console.log('Countries response status:', response.status);\r\n    \r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log('Countries data received:', data);\r\n    } else {\r\n      console.error('Failed to fetch countries. Status:', response.status);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error testing Countries API:', error);\r\n  }\r\n}\r\n\r\n// Export the test functions\r\nexport { testApi, testCountriesApi }; "],"mappings":"AAAA;;AAEA,eAAeA,OAAOA,CAAA,EAAG;EACvB,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;;IAE1C;IACA,MAAMC,OAAO,GAAG,iCAAiC;IACjDF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,OAAO,CAAC;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,CAAC;IACrCF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,QAAQ,CAACE,MAAM,CAAC;IAEhD,IAAIF,QAAQ,CAACG,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCR,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,IAAI,CAAC;IACrC,CAAC,MAAM;MACLP,OAAO,CAACS,KAAK,CAAC,0BAA0B,EAAEN,QAAQ,CAACE,MAAM,CAAC;IAC5D;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC5C;AACF;AAEA,eAAeC,gBAAgBA,CAAA,EAAG;EAChC,IAAI;IACFV,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;IAEvC;IACA,MAAMU,YAAY,GAAG,sCAAsC;IAC3DX,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEU,YAAY,CAAC;IAChD,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACO,YAAY,CAAC;IAC1CX,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,QAAQ,CAACE,MAAM,CAAC;IAE1D,IAAIF,QAAQ,CAACG,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCR,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEM,IAAI,CAAC;IAC/C,CAAC,MAAM;MACLP,OAAO,CAACS,KAAK,CAAC,oCAAoC,EAAEN,QAAQ,CAACE,MAAM,CAAC;IACtE;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdT,OAAO,CAACS,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD;AACF;;AAEA;AACA,SAASV,OAAO,EAAEW,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}