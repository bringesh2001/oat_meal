{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\STSC\\\\Downloads\\\\Agent-Backend-main (3)\\\\my-app\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getChatHistory, sendChatMessage } from '../services/api';\nimport '../styles/Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatId = \"default-chat\"; // Replace with dynamic chat ID logic if needed\n\n  // Check authentication first\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n\n  // Fetch messages when component mounts\n  useEffect(() => {\n    if (!isAuthenticated) return;\n    const fetchMessages = async () => {\n      try {\n        const data = await getChatHistory();\n        setMessages(data);\n      } catch (error) {\n        console.error(\"Failed to fetch messages:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMessages();\n\n    // Option for real-time updates - can be replaced with WebSockets implementation\n    const intervalId = setInterval(fetchMessages, 5000);\n    return () => clearInterval(intervalId);\n  }, [chatId, isAuthenticated]);\n\n  // Scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    try {\n      await sendChatMessage(newMessage);\n      setNewMessage('');\n\n      // Optionally fetch messages again to refresh or update local state\n      const data = await getChatHistory();\n      setMessages(data);\n    } catch (error) {\n      console.error(\"Failed to send message:\", error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading chat...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: \"No messages yet. Start a conversation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.isCurrentUser ? 'message-mine' : 'message-other'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-sender\",\n          children: msg.sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"PSgP7LNge6nWrOpyO2dZ3fB37K0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navigate","getChatHistory","sendChatMessage","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","isAuthenticated","setIsAuthenticated","messagesEndRef","chatId","token","localStorage","getItem","fetchMessages","data","error","console","intervalId","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","map","msg","isCurrentUser","sender","content","Date","timestamp","toLocaleTimeString","id","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/STSC/Downloads/Agent-Backend-main (3)/my-app/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getChatHistory, sendChatMessage } from '../services/api';\r\nimport '../styles/Chat.css';\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const chatId = \"default-chat\"; // Replace with dynamic chat ID logic if needed\r\n  \r\n  // Check authentication first\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Fetch messages when component mounts\r\n  useEffect(() => {\r\n    if (!isAuthenticated) return;\r\n\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const data = await getChatHistory();\r\n        setMessages(data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch messages:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchMessages();\r\n    \r\n    // Option for real-time updates - can be replaced with WebSockets implementation\r\n    const intervalId = setInterval(fetchMessages, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, [chatId, isAuthenticated]);\r\n  \r\n  // Scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n    \r\n    try {\r\n      await sendChatMessage(newMessage);\r\n      setNewMessage('');\r\n      \r\n      // Optionally fetch messages again to refresh or update local state\r\n      const data = await getChatHistory();\r\n      setMessages(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to send message:\", error);\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return <div className=\"loading-spinner\">Loading chat...</div>;\r\n  }\r\n\r\n  // Redirect to login if not authenticated\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <h2>Chat Room</h2>\r\n      </div>\r\n      \r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"no-messages\">No messages yet. Start a conversation!</div>\r\n        ) : (\r\n          messages.map((msg) => (\r\n            <div \r\n              key={msg.id} \r\n              className={`message ${msg.isCurrentUser ? 'message-mine' : 'message-other'}`}\r\n            >\r\n              <div className=\"message-sender\">{msg.sender}</div>\r\n              <div className=\"message-content\">{msg.content}</div>\r\n              <div className=\"message-time\">\r\n                {new Date(msg.timestamp).toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      \r\n      <form onSubmit={handleSendMessage} className=\"message-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          className=\"message-input\"\r\n        />\r\n        <button type=\"submit\" className=\"send-button\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}